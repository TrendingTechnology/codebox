{
   "func (*Regexp).Copy() *Regexp": {
      "Blocks": [
         {
            "Inp": [
               true,
               false
            ],
            "Outp": [
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).Expand(dst []byte, template []byte, src []byte, match []int) []byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               true,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).ExpandString(dst []byte, template string, src string, match []int) []byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               true,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).Find(b []byte) []byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindAll(b []byte, n int) [][]byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindAllIndex(b []byte, n int) [][]int": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindAllString(s string, n int) []string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindAllStringIndex(s string, n int) [][]int": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindAllStringSubmatch(s string, n int) [][]string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindAllStringSubmatchIndex(s string, n int) [][]int": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindAllSubmatch(b []byte, n int) [][][]byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindAllSubmatchIndex(b []byte, n int) [][]int": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindIndex(b []byte) (loc []int)": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindReaderIndex(r io.RuneReader) (loc []int)": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindReaderSubmatchIndex(r io.RuneReader) []int": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindString(s string) string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindStringIndex(s string) (loc []int)": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindStringSubmatch(s string) []string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindStringSubmatchIndex(s string) []int": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).FindSubmatch(b []byte) [][]byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).FindSubmatchIndex(b []byte) []int": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).LiteralPrefix() (prefix string, complete bool)": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).Longest()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).Match(b []byte) bool": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).MatchReader(r io.RuneReader) bool": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).MatchString(s string) bool": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).NumSubexp() int": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).ReplaceAll(src []byte, repl []byte) []byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).ReplaceAllFunc(src []byte, repl func([]byte) []byte) []byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).ReplaceAllLiteral(src []byte, repl []byte) []byte": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).ReplaceAllLiteralString(src string, repl string) string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).ReplaceAllString(src string, repl string) string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).ReplaceAllStringFunc(src string, repl func(string) string) string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               true,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).Split(s string, n int) []string": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Regexp).String() string": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).SubexpIndex(name string) int": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Regexp).SubexpNames() []string": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func Compile(expr string) (*Regexp, error)": {
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func CompilePOSIX(expr string) (*Regexp, error)": {
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func Match(pattern string, b []byte) (matched bool, err error)": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func MatchReader(pattern string, r io.RuneReader) (matched bool, err error)": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func MatchString(pattern string, s string) (matched bool, err error)": {
      "Blocks": [
         {
            "Inp": [
               false,
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func MustCompile(str string) *Regexp": {
      "Blocks": [
         {
            "Inp": [
               true,
               false
            ],
            "Outp": [
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func MustCompilePOSIX(str string) *Regexp": {
      "Blocks": [
         {
            "Inp": [
               true,
               false
            ],
            "Outp": [
               false,
               true
            ]
         }
      ],
      "IsEnabled": false
   },
   "func QuoteMeta(s string) string": {
      "Blocks": [
         {
            "Inp": [
               true,
               false
            ],
            "Outp": [
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   }
}
