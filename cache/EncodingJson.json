{"Name":"json","PkgPath":"encoding/json","PkgName":"json","ID":"encoding/json","Funcs":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"Compact","Signature":"func Compact(dst *bytes.Buffer, src []byte) error","ID":"FunctionCompact","Docs":["Compact appends to dst the JSON-encoded src with","insignificant space characters elided."],"Name":"Compact","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"dst","TypeName":"Buffer","PkgName":"bytes","PkgPath":"bytes","QualifiedName":"bytes.Buffer","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"src","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"HTMLEscape","Signature":"func HTMLEscape(dst *bytes.Buffer, src []byte)","ID":"FunctionHTMLEscape","Docs":["HTMLEscape appends to dst the JSON-encoded src with \u003c, \u003e, \u0026, U+2028 and U+2029","characters inside string literals changed to \\u003c, \\u003e, \\u0026, \\u2028, \\u2029","so that the JSON will be safe to embed inside HTML \u003cscript\u003e tags.","For historical reasons, web browsers don't honor standard HTML","escaping within \u003cscript\u003e tags, so an alternative JSON encoding must","be used."],"Name":"HTMLEscape","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"dst","TypeName":"Buffer","PkgName":"bytes","PkgPath":"bytes","QualifiedName":"bytes.Buffer","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"src","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":null},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"Indent","Signature":"func Indent(dst *bytes.Buffer, src []byte, prefix string, indent string) error","ID":"FunctionIndent","Docs":["Indent appends to dst an indented form of the JSON-encoded src.","Each element in a JSON object or array begins on a new,","indented line beginning with prefix followed by one or more","copies of indent according to the indentation nesting.","The data appended to dst does not begin with the prefix nor","any indentation, to make it easier to embed inside other formatted JSON data.","Although leading space characters (space, tab, carriage return, newline)","at the beginning of src are dropped, trailing space characters","at the end of src are preserved and copied to dst.","For example, if src has no trailing spaces, neither will dst;","if src ends in a trailing newline, so will dst."],"Name":"Indent","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"dst","TypeName":"Buffer","PkgName":"bytes","PkgPath":"bytes","QualifiedName":"bytes.Buffer","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"src","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isParameter(2)","Element":"parameter","Index":2},"VarName":"prefix","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(3)","Element":"parameter","Index":3},"VarName":"indent","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"Marshal","Signature":"func Marshal(v interface{}) ([]byte, error)","ID":"FunctionMarshal","Docs":["Marshal returns the JSON encoding of v.","","Marshal traverses the value v recursively.","If an encountered value implements the Marshaler interface","and is not a nil pointer, Marshal calls its MarshalJSON method","to produce JSON. If no MarshalJSON method is present but the","value implements encoding.TextMarshaler instead, Marshal calls","its MarshalText method and encodes the result as a JSON string.","The nil pointer exception is not strictly necessary","but mimics a similar, necessary exception in the behavior of","UnmarshalJSON.","","Otherwise, Marshal uses the following type-dependent default encodings:","","Boolean values encode as JSON booleans.","","Floating point, integer, and Number values encode as JSON numbers.","","String values encode as JSON strings coerced to valid UTF-8,","replacing invalid bytes with the Unicode replacement rune.","So that the JSON will be safe to embed inside HTML \u003cscript\u003e tags,","the string is encoded using HTMLEscape,","which replaces \"\u003c\", \"\u003e\", \"\u0026\", U+2028, and U+2029 are escaped","to \"\\u003c\",\"\\u003e\", \"\\u0026\", \"\\u2028\", and \"\\u2029\".","This replacement can be disabled when using an Encoder,","by calling SetEscapeHTML(false).","","Array and slice values encode as JSON arrays, except that","[]byte encodes as a base64-encoded string, and a nil slice","encodes as the null JSON value.","","Struct values encode as JSON objects.","Each exported struct field becomes a member of the object, using the","field name as the object key, unless the field is omitted for one of the","reasons given below.","","The encoding of each struct field can be customized by the format string","stored under the \"json\" key in the struct field's tag.","The format string gives the name of the field, possibly followed by a","comma-separated list of options. The name may be empty in order to","specify options without overriding the default field name.","","The \"omitempty\" option specifies that the field should be omitted","from the encoding if the field has an empty value, defined as","false, 0, a nil pointer, a nil interface value, and any empty array,","slice, map, or string.","","As a special case, if the field tag is \"-\", the field is always omitted.","Note that a field with name \"-\" can still be generated using the tag \"-,\".","","Examples of struct field tags and their meanings:","","  // Field appears in JSON as key \"myName\".","  Field int `json:\"myName\"`","","  // Field appears in JSON as key \"myName\" and","  // the field is omitted from the object if its value is empty,","  // as defined above.","  Field int `json:\"myName,omitempty\"`","","  // Field appears in JSON as key \"Field\" (the default), but","  // the field is skipped if empty.","  // Note the leading comma.","  Field int `json:\",omitempty\"`","","  // Field is ignored by this package.","  Field int `json:\"-\"`","","  // Field appears in JSON as key \"-\".","  Field int `json:\"-,\"`","","The \"string\" option signals that a field is stored as JSON inside a","JSON-encoded string. It applies only to fields of string, floating point,","integer, or boolean types. This extra level of encoding is sometimes used","when communicating with JavaScript programs:","","   Int64String int64 `json:\",string\"`","","The key name will be used if it's a non-empty string consisting of","only Unicode letters, digits, and ASCII punctuation except quotation","marks, backslash, and comma.","","Anonymous struct fields are usually marshaled as if their inner exported fields","were fields in the outer struct, subject to the usual Go visibility rules amended","as described in the next paragraph.","An anonymous struct field with a name given in its JSON tag is treated as","having that name, rather than being anonymous.","An anonymous struct field of interface type is treated the same as having","that type as its name, rather than being anonymous.","","The Go visibility rules for struct fields are amended for JSON when","deciding which field to marshal or unmarshal. If there are","multiple fields at the same level, and that level is the least","nested (and would therefore be the nesting level selected by the","usual Go rules), the following extra rules apply:","","1) Of those fields, if any are JSON-tagged, only tagged fields are considered,","even if there are multiple untagged fields that would otherwise conflict.","","2) If there is exactly one field (tagged or not according to the first rule), that is selected.","","3) Otherwise there are multiple fields, and all are ignored; no error occurs.","","Handling of anonymous struct fields is new in Go 1.1.","Prior to Go 1.1, anonymous struct fields were ignored. To force ignoring of","an anonymous struct field in both current and earlier versions, give the field","a JSON tag of \"-\".","","Map values encode as JSON objects. The map's key type must either be a","string, an integer type, or implement encoding.TextMarshaler. The map keys","are sorted and used as JSON object keys by applying the following rules,","subject to the UTF-8 coercion described for string values above:","  - keys of any string type are used directly","  - encoding.TextMarshalers are marshaled","  - integer keys are converted to strings","","Pointer values encode as the value pointed to.","A nil pointer encodes as the null JSON value.","","Interface values encode as the value contained in the interface.","A nil interface value encodes as the null JSON value.","","Channel, complex, and function values cannot be encoded in JSON.","Attempting to encode such a value causes Marshal to return","an UnsupportedTypeError.","","JSON cannot represent cyclic data structures and Marshal does not","handle them. Passing cyclic structures to Marshal will result in","an error."],"Name":"Marshal","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into838","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"MarshalIndent","Signature":"func MarshalIndent(v interface{}, prefix string, indent string) ([]byte, error)","ID":"FunctionMarshalIndent","Docs":["MarshalIndent is like Marshal but applies Indent to format the output.","Each JSON element in the output will begin on a new line beginning with prefix","followed by one or more copies of indent according to the indentation nesting."],"Name":"MarshalIndent","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"prefix","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(2)","Element":"parameter","Index":2},"VarName":"indent","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into612","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"NewDecoder","Signature":"func NewDecoder(r io.Reader) *Decoder","ID":"FunctionNewDecoder","Docs":["NewDecoder returns a new decoder that reads from r.","","The decoder introduces its own buffering and may","read data from r beyond the JSON values requested."],"Name":"NewDecoder","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"r","TypeName":"Reader","PkgName":"io","PkgPath":"io","QualifiedName":"io.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into574","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isResult()","Element":"result","Index":0},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"NewEncoder","Signature":"func NewEncoder(w io.Writer) *Encoder","ID":"FunctionNewEncoder","Docs":["NewEncoder returns a new encoder that writes to w."],"Name":"NewEncoder","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"w","TypeName":"Writer","PkgName":"io","PkgPath":"io","QualifiedName":"io.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"from351","TypeName":"Encoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Encoder","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1}}},"ClassName":"Unmarshal","Signature":"func Unmarshal(data []byte, v interface{}) error","ID":"FunctionUnmarshal","Docs":["Unmarshal parses the JSON-encoded data and stores the result","in the value pointed to by v. If v is nil or not a pointer,","Unmarshal returns an InvalidUnmarshalError.","","Unmarshal uses the inverse of the encodings that","Marshal uses, allocating maps, slices, and pointers as necessary,","with the following additional rules:","","To unmarshal JSON into a pointer, Unmarshal first handles the case of","the JSON being the JSON literal null. In that case, Unmarshal sets","the pointer to nil. Otherwise, Unmarshal unmarshals the JSON into","the value pointed at by the pointer. If the pointer is nil, Unmarshal","allocates a new value for it to point to.","","To unmarshal JSON into a value implementing the Unmarshaler interface,","Unmarshal calls that value's UnmarshalJSON method, including","when the input is a JSON null.","Otherwise, if the value implements encoding.TextUnmarshaler","and the input is a JSON quoted string, Unmarshal calls that value's","UnmarshalText method with the unquoted form of the string.","","To unmarshal JSON into a struct, Unmarshal matches incoming object","keys to the keys used by Marshal (either the struct field name or its tag),","preferring an exact match but also accepting a case-insensitive match. By","default, object keys which don't have a corresponding struct field are","ignored (see Decoder.DisallowUnknownFields for an alternative).","","To unmarshal JSON into an interface value,","Unmarshal stores one of these in the interface value:","","\tbool, for JSON booleans","\tfloat64, for JSON numbers","\tstring, for JSON strings","\t[]interface{}, for JSON arrays","\tmap[string]interface{}, for JSON objects","\tnil for JSON null","","To unmarshal a JSON array into a slice, Unmarshal resets the slice length","to zero and then appends each element to the slice.","As a special case, to unmarshal an empty JSON array into a slice,","Unmarshal replaces the slice with a new empty slice.","","To unmarshal a JSON array into a Go array, Unmarshal decodes","JSON array elements into corresponding Go array elements.","If the Go array is smaller than the JSON array,","the additional JSON array elements are discarded.","If the JSON array is smaller than the Go array,","the additional Go array elements are set to zero values.","","To unmarshal a JSON object into a map, Unmarshal first establishes a map to","use. If the map is nil, Unmarshal allocates a new map. Otherwise Unmarshal","reuses the existing map, keeping existing entries. Unmarshal then stores","key-value pairs from the JSON object into the map. The map's key type must","either be any string type, an integer, implement json.Unmarshaler, or","implement encoding.TextUnmarshaler.","","If a JSON value is not appropriate for a given target type,","or if a JSON number overflows the target type, Unmarshal","skips that field and completes the unmarshaling as best it can.","If no more serious errors are encountered, Unmarshal returns","an UnmarshalTypeError describing the earliest such error. In any","case, it's not guaranteed that all the remaining fields following","the problematic one will be unmarshaled into the target object.","","The JSON null value unmarshals into an interface, map, pointer, or slice","by setting that Go value to nil. Because null is often used in JSON to mean","``not present,'' unmarshaling a JSON null into any other Go type has no effect","on the value and produces no error.","","When unmarshaling quoted strings, invalid UTF-8 or","invalid UTF-16 surrogate pairs are not treated as an error.","Instead, they are replaced by the Unicode replacement","character U+FFFD."],"Name":"Unmarshal","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"data","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Valid","Signature":"func Valid(data []byte) bool","ID":"FunctionValid","Docs":["Valid reports whether data is a valid JSON encoding."],"Name":"Valid","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"data","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}],"TypeMethods":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"DecoderBuffered","Docs":["Buffered returns a reader of the data remaining in the Decoder's","buffer. The reader is valid until the next call to Decode."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from953","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Decoder-Buffered","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Buffered","Signature":"func (*Decoder).Buffered() io.Reader","ID":"FunctionBuffered","Docs":["Buffered returns a reader of the data remaining in the Decoder's","buffer. The reader is valid until the next call to Decode."],"Name":"Buffered","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into669","TypeName":"Reader","PkgName":"io","PkgPath":"io","QualifiedName":"io.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"DecoderDecode","Docs":["Decode reads the next JSON-encoded value from its","input and stores it in the value pointed to by v.","","See the documentation for Unmarshal for details about","the conversion of JSON into a Go value."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from230","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Decoder-Decode","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Decode","Signature":"func (*Decoder).Decode(v interface{}) error","ID":"FunctionDecode","Docs":["Decode reads the next JSON-encoded value from its","input and stores it in the value pointed to by v.","","See the documentation for Unmarshal for details about","the conversion of JSON into a Go value."],"Name":"Decode","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DecoderDisallowUnknownFields","Docs":["DisallowUnknownFields causes the Decoder to return an error when the destination","is a struct and the input contains object keys which do not match any","non-ignored, exported fields in the destination."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Decoder-DisallowUnknownFields","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DisallowUnknownFields","Signature":"func (*Decoder).DisallowUnknownFields()","ID":"FunctionDisallowUnknownFields","Docs":["DisallowUnknownFields causes the Decoder to return an error when the destination","is a struct and the input contains object keys which do not match any","non-ignored, exported fields in the destination."],"Name":"DisallowUnknownFields","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DecoderInputOffset","Docs":["InputOffset returns the input stream byte offset of the current decoder position.","The offset gives the location of the end of the most recently returned token","and the beginning of the next token."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Decoder-InputOffset","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"InputOffset","Signature":"func (*Decoder).InputOffset() int64","ID":"FunctionInputOffset","Docs":["InputOffset returns the input stream byte offset of the current decoder position.","The offset gives the location of the end of the most recently returned token","and the beginning of the next token."],"Name":"InputOffset","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DecoderMore","Docs":["More reports whether there is another element in the","current array or object being parsed."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Decoder-More","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"More","Signature":"func (*Decoder).More() bool","ID":"FunctionMore","Docs":["More reports whether there is another element in the","current array or object being parsed."],"Name":"More","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"DecoderToken","Docs":["Token returns the next JSON token in the input stream.","At the end of the input stream, Token returns nil, io.EOF.","","Token guarantees that the delimiters [ ] { } it returns are","properly nested and matched: if Token encounters an unexpected","delimiter in the input, it will return an error.","","The input stream consists of basic JSON values—bool, string,","number, and null—along with delimiters [ ] { } of type Delim","to mark the start and end of arrays and objects.","Commas and colons are elided."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from501","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Decoder-Token","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Token","Signature":"func (*Decoder).Token() (Token, error)","ID":"FunctionToken","Docs":["Token returns the next JSON token in the input stream.","At the end of the input stream, Token returns nil, io.EOF.","","Token guarantees that the delimiters [ ] { } it returns are","properly nested and matched: if Token encounters an unexpected","delimiter in the input, it will return an error.","","The input stream consists of basic JSON values—bool, string,","number, and null—along with delimiters [ ] { } of type Delim","to mark the start and end of arrays and objects.","Commas and colons are elided."],"Name":"Token","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into923","TypeName":"Token","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Token","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DecoderUseNumber","Docs":["UseNumber causes the Decoder to unmarshal a number into an interface{} as a","Number instead of as a float64."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Decoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Decoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Decoder-UseNumber","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"UseNumber","Signature":"func (*Decoder).UseNumber()","ID":"FunctionUseNumber","Docs":["UseNumber causes the Decoder to unmarshal a number into an interface{} as a","Number instead of as a float64."],"Name":"UseNumber","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DelimString","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Delim","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Delim","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Delim-String","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"String","Signature":"func (Delim).String() string","ID":"FunctionString","Docs":[],"Name":"String","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"EncoderEncode","Docs":["Encode writes the JSON encoding of v to the stream,","followed by a newline character.","","See the documentation for Marshal for details about the","conversion of Go values to JSON."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into742","TypeName":"Encoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Encoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Encoder-Encode","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Encode","Signature":"func (*Encoder).Encode(v interface{}) error","ID":"FunctionEncode","Docs":["Encode writes the JSON encoding of v to the stream,","followed by a newline character.","","See the documentation for Marshal for details about the","conversion of Go values to JSON."],"Name":"Encode","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"EncoderSetEscapeHTML","Docs":["SetEscapeHTML specifies whether problematic HTML characters","should be escaped inside JSON quoted strings.","The default behavior is to escape \u0026, \u003c, and \u003e to \\u0026, \\u003c, and \\u003e","to avoid certain safety problems that can arise when embedding JSON in HTML.","","In non-HTML settings where the escaping interferes with the readability","of the output, SetEscapeHTML(false) disables this behavior."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Encoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Encoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Encoder-SetEscapeHTML","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"SetEscapeHTML","Signature":"func (*Encoder).SetEscapeHTML(on bool)","ID":"FunctionSetEscapeHTML","Docs":["SetEscapeHTML specifies whether problematic HTML characters","should be escaped inside JSON quoted strings.","The default behavior is to escape \u0026, \u003c, and \u003e to \\u0026, \\u003c, and \\u003e","to avoid certain safety problems that can arise when embedding JSON in HTML.","","In non-HTML settings where the escaping interferes with the readability","of the output, SetEscapeHTML(false) disables this behavior."],"Name":"SetEscapeHTML","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"on","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"EncoderSetIndent","Docs":["SetIndent instructs the encoder to format each subsequent encoded","value as if indented by the package-level function Indent(dst, src, prefix, indent).","Calling SetIndent(\"\", \"\") disables indentation."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Encoder","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Encoder","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Encoder-SetIndent","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"SetIndent","Signature":"func (*Encoder).SetIndent(prefix string, indent string)","ID":"FunctionSetIndent","Docs":["SetIndent instructs the encoder to format each subsequent encoded","value as if indented by the package-level function Indent(dst, src, prefix, indent).","Calling SetIndent(\"\", \"\") disables indentation."],"Name":"SetIndent","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"prefix","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"indent","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"InvalidUTF8ErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"InvalidUTF8Error","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.InvalidUTF8Error","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-InvalidUTF8Error-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*InvalidUTF8Error).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"InvalidUnmarshalErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"InvalidUnmarshalError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.InvalidUnmarshalError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-InvalidUnmarshalError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*InvalidUnmarshalError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MarshalerErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"MarshalerError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.MarshalerError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-MarshalerError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*MarshalerError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MarshalerErrorUnwrap","Docs":["Unwrap returns the underlying error."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"MarshalerError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.MarshalerError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-MarshalerError-Unwrap","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Unwrap","Signature":"func (*MarshalerError).Unwrap() error","ID":"FunctionUnwrap","Docs":["Unwrap returns the underlying error."],"Name":"Unwrap","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"NumberFloat64","Docs":["Float64 returns the number as a float64."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Number","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Number","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Number-Float64","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Float64","Signature":"func (Number).Float64() (float64, error)","ID":"FunctionFloat64","Docs":["Float64 returns the number as a float64."],"Name":"Float64","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"float64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"NumberInt64","Docs":["Int64 returns the number as an int64."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Number","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Number","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Number-Int64","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Int64","Signature":"func (Number).Int64() (int64, error)","ID":"FunctionInt64","Docs":["Int64 returns the number as an int64."],"Name":"Int64","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"NumberString","Docs":["String returns the literal text of the number."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Number","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.Number","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Number-String","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"String","Signature":"func (Number).String() string","ID":"FunctionString","Docs":["String returns the literal text of the number."],"Name":"String","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"RawMessageMarshalJSON","Docs":["MarshalJSON returns m as the JSON encoding of m."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from220","TypeName":"RawMessage","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.RawMessage","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-RawMessage-MarshalJSON","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MarshalJSON","Signature":"func (RawMessage).MarshalJSON() ([]byte, error)","ID":"FunctionMarshalJSON","Docs":["MarshalJSON returns m as the JSON encoding of m."],"Name":"MarshalJSON","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into745","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"RawMessageUnmarshalJSON","Docs":["UnmarshalJSON sets *m to a copy of data."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into448","TypeName":"RawMessage","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.RawMessage","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-RawMessage-UnmarshalJSON","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"UnmarshalJSON","Signature":"func (*RawMessage).UnmarshalJSON(data []byte) error","ID":"FunctionUnmarshalJSON","Docs":["UnmarshalJSON sets *m to a copy of data."],"Name":"UnmarshalJSON","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"data","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"SyntaxErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"SyntaxError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.SyntaxError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-SyntaxError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*SyntaxError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"UnmarshalFieldErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"UnmarshalFieldError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.UnmarshalFieldError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-UnmarshalFieldError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*UnmarshalFieldError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"UnmarshalTypeErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"UnmarshalTypeError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.UnmarshalTypeError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-UnmarshalTypeError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*UnmarshalTypeError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"UnsupportedTypeErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"UnsupportedTypeError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.UnsupportedTypeError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-UnsupportedTypeError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*UnsupportedTypeError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"UnsupportedValueErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"UnsupportedValueError","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.UnsupportedValueError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-UnsupportedValueError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*UnsupportedValueError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}}],"InterfaceMethods":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"MarshalerMarshalJSON","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from746","TypeName":"Marshaler","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.MarshalJSON","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Marshaler-MarshalJSON","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MarshalJSON","Signature":"func (Marshaler).MarshalJSON() ([]byte, error)","ID":"FunctionMarshalJSON","Docs":[],"Name":"MarshalJSON","PkgPath":"encoding/json","PkgName":"json","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into661","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"UnmarshalerUnmarshalJSON","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into516","TypeName":"Unmarshaler","PkgName":"json","PkgPath":"encoding/json","QualifiedName":"encoding/json.UnmarshalJSON","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Unmarshaler-UnmarshalJSON","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"UnmarshalJSON","Signature":"func (Unmarshaler).UnmarshalJSON([]byte) error","ID":"FunctionUnmarshalJSON","Docs":[],"Name":"UnmarshalJSON","PkgPath":"encoding/json","PkgName":"json","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"from681","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}}]}