{"Name":"driver","PkgPath":"database/sql/driver","PkgName":"driver","ID":"database/sql/driver","Funcs":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"IsScanValue","Signature":"func IsScanValue(v interface{}) bool","ID":"FunctionIsScanValue","Docs":["IsScanValue is equivalent to IsValue.","It exists for compatibility."],"Name":"IsScanValue","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"IsValue","Signature":"func IsValue(v interface{}) bool","ID":"FunctionIsValue","Docs":["IsValue reports whether v is a valid Value parameter type."],"Name":"IsValue","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}],"TypeMethods":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"NotNullConvertValue","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"NotNull","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NotNull","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-NotNull-ConvertValue","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConvertValue","Signature":"func (NotNull).ConvertValue(v interface{}) (Value, error)","ID":"FunctionConvertValue","Docs":[],"Name":"ConvertValue","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"NullConvertValue","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Null","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Null","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Null-ConvertValue","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConvertValue","Signature":"func (Null).ConvertValue(v interface{}) (Value, error)","ID":"FunctionConvertValue","Docs":[],"Name":"ConvertValue","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsAffectedLastInsertId","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsAffected","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.RowsAffected","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-RowsAffected-LastInsertId","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"LastInsertId","Signature":"func (RowsAffected).LastInsertId() (int64, error)","ID":"FunctionLastInsertId","Docs":[],"Name":"LastInsertId","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsAffectedRowsAffected","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsAffected","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.RowsAffected","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-RowsAffected-RowsAffected","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsAffected","Signature":"func (RowsAffected).RowsAffected() (int64, error)","ID":"FunctionRowsAffected","Docs":[],"Name":"RowsAffected","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}}],"InterfaceMethods":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConnBegin","Docs":["Begin starts and returns a new transaction.","","Deprecated: Drivers should implement ConnBeginTx instead (or additionally)."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Conn","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Begin","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Conn-Begin","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Begin","Signature":"func (Conn).Begin() (Tx, error)","ID":"FunctionBegin","Docs":["Begin starts and returns a new transaction.","","Deprecated: Drivers should implement ConnBeginTx instead (or additionally)."],"Name":"Begin","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Tx","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Tx","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConnBeginTxBeginTx","Docs":["BeginTx starts and returns a new transaction.","If the context is canceled by the user the sql package will","call Tx.Rollback before discarding and closing the connection.","","This must check opts.Isolation to determine if there is a set","isolation level. If the driver does not support a non-default","level and one is set or if there is a non-default isolation level","that is not supported, an error must be returned.","","This must also check opts.ReadOnly to determine if the read-only","value is true to either set the read-only transaction property if supported","or return an error if it is not supported."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"ConnBeginTx","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.BeginTx","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-ConnBeginTx-BeginTx","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"BeginTx","Signature":"func (ConnBeginTx).BeginTx(ctx context.Context, opts TxOptions) (Tx, error)","ID":"FunctionBeginTx","Docs":["BeginTx starts and returns a new transaction.","If the context is canceled by the user the sql package will","call Tx.Rollback before discarding and closing the connection.","","This must check opts.Isolation to determine if there is a set","isolation level. If the driver does not support a non-default","level and one is set or if there is a non-default isolation level","that is not supported, an error must be returned.","","This must also check opts.ReadOnly to determine if the read-only","value is true to either set the read-only transaction property if supported","or return an error if it is not supported."],"Name":"BeginTx","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"opts","TypeName":"TxOptions","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.TxOptions","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":true,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Tx","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Tx","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"NamedValueCheckerCheckNamedValue","Docs":["CheckNamedValue is called before passing arguments to the driver","and is called in place of any ColumnConverter. CheckNamedValue must do type","validation and conversion as appropriate for the driver."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"NamedValueChecker","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.CheckNamedValue","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-NamedValueChecker-CheckNamedValue","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"CheckNamedValue","Signature":"func (NamedValueChecker).CheckNamedValue(*NamedValue) error","ID":"FunctionCheckNamedValue","Docs":["CheckNamedValue is called before passing arguments to the driver","and is called in place of any ColumnConverter. CheckNamedValue must do type","validation and conversion as appropriate for the driver."],"Name":"CheckNamedValue","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"","TypeName":"NamedValue","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NamedValue","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConnClose","Docs":["Close invalidates and potentially stops any current","prepared statements and transactions, marking this","connection as no longer in use.","","Because the sql package maintains a free pool of","connections and only calls Close when there's a surplus of","idle connections, it shouldn't be necessary for drivers to","do their own connection caching."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Conn","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Close","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Conn-Close","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Close","Signature":"func (Conn).Close() error","ID":"FunctionClose","Docs":["Close invalidates and potentially stops any current","prepared statements and transactions, marking this","connection as no longer in use.","","Because the sql package maintains a free pool of","connections and only calls Close when there's a surplus of","idle connections, it shouldn't be necessary for drivers to","do their own connection caching."],"Name":"Close","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StmtClose","Docs":["Close closes the statement.","","As of Go 1.1, a Stmt will not be closed if it's in use","by any queries."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Stmt","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Close","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Stmt-Close","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Close","Signature":"func (Stmt).Close() error","ID":"FunctionClose","Docs":["Close closes the statement.","","As of Go 1.1, a Stmt will not be closed if it's in use","by any queries."],"Name":"Close","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsClose","Docs":["Close closes the rows iterator."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Rows","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Close","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Rows-Close","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Close","Signature":"func (Rows).Close() error","ID":"FunctionClose","Docs":["Close closes the rows iterator."],"Name":"Close","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ColumnConverterColumnConverter","Docs":["ColumnConverter returns a ValueConverter for the provided","column index. If the type of a specific column isn't known","or shouldn't be handled specially, DefaultValueConverter","can be returned."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"ColumnConverter","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ColumnConverter","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-ColumnConverter-ColumnConverter","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ColumnConverter","Signature":"func (ColumnConverter).ColumnConverter(idx int) ValueConverter","ID":"FunctionColumnConverter","Docs":["ColumnConverter returns a ValueConverter for the provided","column index. If the type of a specific column isn't known","or shouldn't be handled specially, DefaultValueConverter","can be returned."],"Name":"ColumnConverter","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"idx","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"ValueConverter","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ValueConverter","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsColumnTypeDatabaseTypeNameColumnTypeDatabaseTypeName","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsColumnTypeDatabaseTypeName","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ColumnTypeDatabaseTypeName","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-RowsColumnTypeDatabaseTypeName-ColumnTypeDatabaseTypeName","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ColumnTypeDatabaseTypeName","Signature":"func (RowsColumnTypeDatabaseTypeName).ColumnTypeDatabaseTypeName(index int) string","ID":"FunctionColumnTypeDatabaseTypeName","Docs":[],"Name":"ColumnTypeDatabaseTypeName","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"index","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsColumnTypeLengthColumnTypeLength","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsColumnTypeLength","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ColumnTypeLength","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-RowsColumnTypeLength-ColumnTypeLength","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ColumnTypeLength","Signature":"func (RowsColumnTypeLength).ColumnTypeLength(index int) (length int64, ok bool)","ID":"FunctionColumnTypeLength","Docs":[],"Name":"ColumnTypeLength","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"index","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"length","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"ok","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsColumnTypeNullableColumnTypeNullable","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsColumnTypeNullable","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ColumnTypeNullable","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-RowsColumnTypeNullable-ColumnTypeNullable","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ColumnTypeNullable","Signature":"func (RowsColumnTypeNullable).ColumnTypeNullable(index int) (nullable bool, ok bool)","ID":"FunctionColumnTypeNullable","Docs":[],"Name":"ColumnTypeNullable","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"index","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"nullable","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"ok","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsColumnTypePrecisionScaleColumnTypePrecisionScale","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsColumnTypePrecisionScale","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ColumnTypePrecisionScale","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-RowsColumnTypePrecisionScale-ColumnTypePrecisionScale","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ColumnTypePrecisionScale","Signature":"func (RowsColumnTypePrecisionScale).ColumnTypePrecisionScale(index int) (precision int64, scale int64, ok bool)","ID":"FunctionColumnTypePrecisionScale","Docs":[],"Name":"ColumnTypePrecisionScale","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"index","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"precision","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"scale","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(2)","Element":"result","Index":2},"VarName":"ok","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsColumnTypeScanTypeColumnTypeScanType","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsColumnTypeScanType","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ColumnTypeScanType","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-RowsColumnTypeScanType-ColumnTypeScanType","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ColumnTypeScanType","Signature":"func (RowsColumnTypeScanType).ColumnTypeScanType(index int) reflect.Type","ID":"FunctionColumnTypeScanType","Docs":[],"Name":"ColumnTypeScanType","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"index","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Type","PkgName":"reflect","PkgPath":"reflect","QualifiedName":"reflect.Type","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsColumns","Docs":["Columns returns the names of the columns. The number of","columns of the result is inferred from the length of the","slice. If a particular column name isn't known, an empty","string should be returned for that entry."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Rows","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Columns","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Rows-Columns","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Columns","Signature":"func (Rows).Columns() []string","ID":"FunctionColumns","Docs":["Columns returns the names of the columns. The number of","columns of the result is inferred from the length of the","slice. If a particular column name isn't known, an empty","string should be returned for that entry."],"Name":"Columns","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"TxCommit","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Tx","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Commit","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Tx-Commit","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Commit","Signature":"func (Tx).Commit() error","ID":"FunctionCommit","Docs":[],"Name":"Commit","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConnectorConnect","Docs":["Connect returns a connection to the database.","Connect may return a cached connection (one previously","closed), but doing so is unnecessary; the sql package","maintains a pool of idle connections for efficient re-use.","","The provided context.Context is for dialing purposes only","(see net.DialContext) and should not be stored or used for","other purposes.","","The returned connection is only used by one goroutine at a","time."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Connector","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Connect","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Connector-Connect","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Connect","Signature":"func (Connector).Connect(context.Context) (Conn, error)","ID":"FunctionConnect","Docs":["Connect returns a connection to the database.","Connect may return a cached connection (one previously","closed), but doing so is unnecessary; the sql package","maintains a pool of idle connections for efficient re-use.","","The provided context.Context is for dialing purposes only","(see net.DialContext) and should not be stored or used for","other purposes.","","The returned connection is only used by one goroutine at a","time."],"Name":"Connect","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Conn","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Conn","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ValueConverterConvertValue","Docs":["ConvertValue converts a value to a driver Value."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"ValueConverter","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ConvertValue","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-ValueConverter-ConvertValue","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConvertValue","Signature":"func (ValueConverter).ConvertValue(v interface{}) (Value, error)","ID":"FunctionConvertValue","Docs":["ConvertValue converts a value to a driver Value."],"Name":"ConvertValue","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConnectorDriver","Docs":["Driver returns the underlying Driver of the Connector,","mainly to maintain compatibility with the Driver method","on sql.DB."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Connector","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Driver","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Connector-Driver","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Driver","Signature":"func (Connector).Driver() Driver","ID":"FunctionDriver","Docs":["Driver returns the underlying Driver of the Connector,","mainly to maintain compatibility with the Driver method","on sql.DB."],"Name":"Driver","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Driver","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Driver","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ExecerExec","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Execer","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Exec","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Execer-Exec","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Exec","Signature":"func (Execer).Exec(query string, args []Value) (Result, error)","ID":"FunctionExec","Docs":[],"Name":"Exec","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"query","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"args","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Result","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Result","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StmtExec","Docs":["Exec executes a query that doesn't return rows, such","as an INSERT or UPDATE.","","Deprecated: Drivers should implement StmtExecContext instead (or additionally)."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Stmt","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Exec","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Stmt-Exec","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Exec","Signature":"func (Stmt).Exec(args []Value) (Result, error)","ID":"FunctionExec","Docs":["Exec executes a query that doesn't return rows, such","as an INSERT or UPDATE.","","Deprecated: Drivers should implement StmtExecContext instead (or additionally)."],"Name":"Exec","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"args","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Result","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Result","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StmtExecContextExecContext","Docs":["ExecContext executes a query that doesn't return rows, such","as an INSERT or UPDATE.","","ExecContext must honor the context timeout and return when it is canceled."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"StmtExecContext","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ExecContext","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-StmtExecContext-ExecContext","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ExecContext","Signature":"func (StmtExecContext).ExecContext(ctx context.Context, args []NamedValue) (Result, error)","ID":"FunctionExecContext","Docs":["ExecContext executes a query that doesn't return rows, such","as an INSERT or UPDATE.","","ExecContext must honor the context timeout and return when it is canceled."],"Name":"ExecContext","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"args","TypeName":"NamedValue","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NamedValue","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Result","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Result","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ExecerContextExecContext","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"ExecerContext","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ExecContext","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-ExecerContext-ExecContext","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ExecContext","Signature":"func (ExecerContext).ExecContext(ctx context.Context, query string, args []NamedValue) (Result, error)","ID":"FunctionExecContext","Docs":[],"Name":"ExecContext","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"query","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(2)","Element":"parameter","Index":2},"VarName":"args","TypeName":"NamedValue","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NamedValue","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Result","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Result","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsNextResultSetHasNextResultSet","Docs":["HasNextResultSet is called at the end of the current result set and","reports whether there is another result set after the current one."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsNextResultSet","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.HasNextResultSet","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-RowsNextResultSet-HasNextResultSet","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"HasNextResultSet","Signature":"func (RowsNextResultSet).HasNextResultSet() bool","ID":"FunctionHasNextResultSet","Docs":["HasNextResultSet is called at the end of the current result set and","reports whether there is another result set after the current one."],"Name":"HasNextResultSet","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ResultLastInsertId","Docs":["LastInsertId returns the database's auto-generated ID","after, for example, an INSERT into a table with primary","key."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Result","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.LastInsertId","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Result-LastInsertId","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"LastInsertId","Signature":"func (Result).LastInsertId() (int64, error)","ID":"FunctionLastInsertId","Docs":["LastInsertId returns the database's auto-generated ID","after, for example, an INSERT into a table with primary","key."],"Name":"LastInsertId","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsNext","Docs":["Next is called to populate the next row of data into","the provided slice. The provided slice will be the same","size as the Columns() are wide.","","Next should return io.EOF when there are no more rows.","","The dest should not be written to outside of Next. Care","should be taken when closing Rows not to modify","a buffer held in dest."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Rows","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Next","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Rows-Next","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Next","Signature":"func (Rows).Next(dest []Value) error","ID":"FunctionNext","Docs":["Next is called to populate the next row of data into","the provided slice. The provided slice will be the same","size as the Columns() are wide.","","Next should return io.EOF when there are no more rows.","","The dest should not be written to outside of Next. Care","should be taken when closing Rows not to modify","a buffer held in dest."],"Name":"Next","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"dest","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsNextResultSetNextResultSet","Docs":["NextResultSet advances the driver to the next result set even","if there are remaining rows in the current result set.","","NextResultSet should return io.EOF when there are no more result sets."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"RowsNextResultSet","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NextResultSet","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-RowsNextResultSet-NextResultSet","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"NextResultSet","Signature":"func (RowsNextResultSet).NextResultSet() error","ID":"FunctionNextResultSet","Docs":["NextResultSet advances the driver to the next result set even","if there are remaining rows in the current result set.","","NextResultSet should return io.EOF when there are no more result sets."],"Name":"NextResultSet","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StmtNumInput","Docs":["NumInput returns the number of placeholder parameters.","","If NumInput returns \u003e= 0, the sql package will sanity check","argument counts from callers and return errors to the caller","before the statement's Exec or Query methods are called.","","NumInput may also return -1, if the driver doesn't know","its number of placeholders. In that case, the sql package","will not sanity check Exec or Query argument counts."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Stmt","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NumInput","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Stmt-NumInput","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"NumInput","Signature":"func (Stmt).NumInput() int","ID":"FunctionNumInput","Docs":["NumInput returns the number of placeholder parameters.","","If NumInput returns \u003e= 0, the sql package will sanity check","argument counts from callers and return errors to the caller","before the statement's Exec or Query methods are called.","","NumInput may also return -1, if the driver doesn't know","its number of placeholders. In that case, the sql package","will not sanity check Exec or Query argument counts."],"Name":"NumInput","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DriverOpen","Docs":["Open returns a new connection to the database.","The name is a string in a driver-specific format.","","Open may return a cached connection (one previously","closed), but doing so is unnecessary; the sql package","maintains a pool of idle connections for efficient re-use.","","The returned connection is only used by one goroutine at a","time."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Driver","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Open","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Driver-Open","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Open","Signature":"func (Driver).Open(name string) (Conn, error)","ID":"FunctionOpen","Docs":["Open returns a new connection to the database.","The name is a string in a driver-specific format.","","Open may return a cached connection (one previously","closed), but doing so is unnecessary; the sql package","maintains a pool of idle connections for efficient re-use.","","The returned connection is only used by one goroutine at a","time."],"Name":"Open","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"name","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Conn","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Conn","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DriverContextOpenConnector","Docs":["OpenConnector must parse the name in the same format that Driver.Open","parses the name parameter."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"DriverContext","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.OpenConnector","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-DriverContext-OpenConnector","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"OpenConnector","Signature":"func (DriverContext).OpenConnector(name string) (Connector, error)","ID":"FunctionOpenConnector","Docs":["OpenConnector must parse the name in the same format that Driver.Open","parses the name parameter."],"Name":"OpenConnector","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"name","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Connector","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Connector","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PingerPing","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Pinger","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Ping","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Pinger-Ping","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Ping","Signature":"func (Pinger).Ping(ctx context.Context) error","ID":"FunctionPing","Docs":[],"Name":"Ping","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ConnPrepare","Docs":["Prepare returns a prepared statement, bound to this connection."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Conn","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Prepare","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Conn-Prepare","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Prepare","Signature":"func (Conn).Prepare(query string) (Stmt, error)","ID":"FunctionPrepare","Docs":["Prepare returns a prepared statement, bound to this connection."],"Name":"Prepare","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"query","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Stmt","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Stmt","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ConnPrepareContextPrepareContext","Docs":["PrepareContext returns a prepared statement, bound to this connection.","context is for the preparation of the statement,","it must not store the context within the statement itself."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"ConnPrepareContext","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.PrepareContext","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-ConnPrepareContext-PrepareContext","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PrepareContext","Signature":"func (ConnPrepareContext).PrepareContext(ctx context.Context, query string) (Stmt, error)","ID":"FunctionPrepareContext","Docs":["PrepareContext returns a prepared statement, bound to this connection.","context is for the preparation of the statement,","it must not store the context within the statement itself."],"Name":"PrepareContext","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"query","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Stmt","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Stmt","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StmtQuery","Docs":["Query executes a query that may return rows, such as a","SELECT.","","Deprecated: Drivers should implement StmtQueryContext instead (or additionally)."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Stmt","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Query","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Stmt-Query","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Query","Signature":"func (Stmt).Query(args []Value) (Rows, error)","ID":"FunctionQuery","Docs":["Query executes a query that may return rows, such as a","SELECT.","","Deprecated: Drivers should implement StmtQueryContext instead (or additionally)."],"Name":"Query","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"args","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Rows","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Rows","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"QueryerQuery","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Queryer","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Query","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Queryer-Query","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Query","Signature":"func (Queryer).Query(query string, args []Value) (Rows, error)","ID":"FunctionQuery","Docs":[],"Name":"Query","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"query","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"args","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Rows","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Rows","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StmtQueryContextQueryContext","Docs":["QueryContext executes a query that may return rows, such as a","SELECT.","","QueryContext must honor the context timeout and return when it is canceled."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"StmtQueryContext","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.QueryContext","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-StmtQueryContext-QueryContext","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"QueryContext","Signature":"func (StmtQueryContext).QueryContext(ctx context.Context, args []NamedValue) (Rows, error)","ID":"FunctionQueryContext","Docs":["QueryContext executes a query that may return rows, such as a","SELECT.","","QueryContext must honor the context timeout and return when it is canceled."],"Name":"QueryContext","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"args","TypeName":"NamedValue","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NamedValue","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Rows","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Rows","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"QueryerContextQueryContext","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"QueryerContext","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.QueryContext","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-QueryerContext-QueryContext","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"QueryContext","Signature":"func (QueryerContext).QueryContext(ctx context.Context, query string, args []NamedValue) (Rows, error)","ID":"FunctionQueryContext","Docs":[],"Name":"QueryContext","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"query","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(2)","Element":"parameter","Index":2},"VarName":"args","TypeName":"NamedValue","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.NamedValue","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Rows","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Rows","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"SessionResetterResetSession","Docs":["ResetSession is called while a connection is in the connection","pool. No queries will run on this connection until this method returns.","","If the connection is bad this should return driver.ErrBadConn to prevent","the connection from being returned to the connection pool. Any other","error will be discarded."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"SessionResetter","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.ResetSession","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-SessionResetter-ResetSession","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ResetSession","Signature":"func (SessionResetter).ResetSession(ctx context.Context) error","ID":"FunctionResetSession","Docs":["ResetSession is called while a connection is in the connection","pool. No queries will run on this connection until this method returns.","","If the connection is bad this should return driver.ErrBadConn to prevent","the connection from being returned to the connection pool. Any other","error will be discarded."],"Name":"ResetSession","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"ctx","TypeName":"Context","PkgName":"context","PkgPath":"context","QualifiedName":"context.Context","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"TxRollback","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Tx","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Rollback","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Tx-Rollback","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Rollback","Signature":"func (Tx).Rollback() error","ID":"FunctionRollback","Docs":[],"Name":"Rollback","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ResultRowsAffected","Docs":["RowsAffected returns the number of rows affected by the","query."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Result","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.RowsAffected","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Result-RowsAffected","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RowsAffected","Signature":"func (Result).RowsAffected() (int64, error)","ID":"FunctionRowsAffected","Docs":["RowsAffected returns the number of rows affected by the","query."],"Name":"RowsAffected","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"int64","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ValuerValue","Docs":["Value returns a driver Value.","Value must not panic."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Valuer","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"interface-method-Valuer-Value","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Value","Signature":"func (Valuer).Value() (Value, error)","ID":"FunctionValue","Docs":["Value returns a driver Value.","Value must not panic."],"Name":"Value","PkgPath":"database/sql/driver","PkgName":"driver","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Value","PkgName":"driver","PkgPath":"database/sql/driver","QualifiedName":"database/sql/driver.Value","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}}]}