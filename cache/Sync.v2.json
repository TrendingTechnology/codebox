{
   "func (*Cond).Broadcast()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Cond).Signal()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Cond).Wait()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Map).Delete(key interface{})": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Map).Load(key interface{}) (value interface{}, ok bool)": {
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Map).LoadOrStore(key interface{}, value interface{}) (actual interface{}, loaded bool)": {
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false,
               false,
               false
            ],
            "Outp": [
               false,
               false,
               false,
               true,
               false
            ]
         },
         {
            "Inp": [
               false,
               false,
               true,
               false,
               false
            ],
            "Outp": [
               true,
               false,
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Map).Range(f func(key interface{}, value interface{}) bool)": {
      "Blocks": [
         {
            "Inp": [
               true,
               false
            ],
            "Outp": [
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Map).Store(key interface{}, value interface{})": {
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               true
            ],
            "Outp": [
               true,
               false,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Mutex).Lock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Mutex).Unlock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Once).Do(f func())": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*Pool).Get() interface{}": {
      "Blocks": [
         {
            "Inp": [
               true,
               false
            ],
            "Outp": [
               false,
               true
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*Pool).Put(x interface{})": {
      "Blocks": [
         {
            "Inp": [
               false,
               true
            ],
            "Outp": [
               true,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func (*RWMutex).Lock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*RWMutex).RLock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*RWMutex).RLocker() Locker": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*RWMutex).RUnlock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*RWMutex).Unlock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*WaitGroup).Add(delta int)": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*WaitGroup).Done()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (*WaitGroup).Wait()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (Locker).Lock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func (Locker).Unlock()": {
      "Blocks": [
         {
            "Inp": [
               false
            ],
            "Outp": [
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func NewCond(l Locker) *Cond": {
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   }
}
