{
   "func DecodeLastRune(p []byte) (r rune, size int)": {
      "GeneratedClass": "\n    private class DecodeLastRune extends TaintTracking::FunctionModel {\n      // signature: func DecodeLastRune(p []byte) (r rune, size int)\n      DecodeLastRune() { hasQualifiedName(\"unicode/utf8\", \"DecodeLastRune\") }\n\n      override predicate hasTaintFlow(FunctionInput inp, FunctionOutput outp) {\n        ((inp.isParameter(0)) and (outp.isResult(0)))\n      }\n    }",
      "GeneratedConditions": "((inp.isParameter(0)) and (outp.isResult(0)))",
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func DecodeLastRuneInString(s string) (r rune, size int)": {
      "GeneratedClass": "\n    private class DecodeLastRuneInString extends TaintTracking::FunctionModel {\n      // signature: func DecodeLastRuneInString(s string) (r rune, size int)\n      DecodeLastRuneInString() { hasQualifiedName(\"unicode/utf8\", \"DecodeLastRuneInString\") }\n\n      override predicate hasTaintFlow(FunctionInput inp, FunctionOutput outp) {\n        ((inp.isParameter(0)) and (outp.isResult(0)))\n      }\n    }",
      "GeneratedConditions": "((inp.isParameter(0)) and (outp.isResult(0)))",
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func DecodeRune(p []byte) (r rune, size int)": {
      "GeneratedClass": "\n    private class DecodeRune extends TaintTracking::FunctionModel {\n      // signature: func DecodeRune(p []byte) (r rune, size int)\n      DecodeRune() { hasQualifiedName(\"unicode/utf8\", \"DecodeRune\") }\n\n      override predicate hasTaintFlow(FunctionInput inp, FunctionOutput outp) {\n        ((inp.isParameter(0)) and (outp.isResult(0)))\n      }\n    }",
      "GeneratedConditions": "((inp.isParameter(0)) and (outp.isResult(0)))",
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func DecodeRuneInString(s string) (r rune, size int)": {
      "GeneratedClass": "\n    private class DecodeRuneInString extends TaintTracking::FunctionModel {\n      // signature: func DecodeRuneInString(s string) (r rune, size int)\n      DecodeRuneInString() { hasQualifiedName(\"unicode/utf8\", \"DecodeRuneInString\") }\n\n      override predicate hasTaintFlow(FunctionInput inp, FunctionOutput outp) {\n        ((inp.isParameter(0)) and (outp.isResult(0)))\n      }\n    }",
      "GeneratedConditions": "((inp.isParameter(0)) and (outp.isResult(0)))",
      "Blocks": [
         {
            "Inp": [
               true,
               false,
               false
            ],
            "Outp": [
               false,
               true,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func EncodeRune(p []byte, r rune) int": {
      "GeneratedClass": "\n    private class EncodeRune extends TaintTracking::FunctionModel {\n      // signature: func EncodeRune(p []byte, r rune) int\n      EncodeRune() { hasQualifiedName(\"unicode/utf8\", \"EncodeRune\") }\n\n      override predicate hasTaintFlow(FunctionInput inp, FunctionOutput outp) {\n        ((inp.isParameter(1)) and (outp.isParameter(0)))\n      }\n    }",
      "GeneratedConditions": "((inp.isParameter(1)) and (outp.isParameter(0)))",
      "Blocks": [
         {
            "Inp": [
               false,
               true,
               false
            ],
            "Outp": [
               true,
               false,
               false
            ]
         }
      ],
      "IsEnabled": true
   },
   "func FullRune(p []byte) bool": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func FullRuneInString(s string) bool": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func RuneCount(p []byte) int": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func RuneCountInString(s string) (n int)": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func RuneLen(r rune) int": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func RuneStart(b byte) bool": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func Valid(p []byte) bool": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func ValidRune(r rune) bool": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   },
   "func ValidString(s string) bool": {
      "GeneratedClass": "",
      "GeneratedConditions": "",
      "Blocks": [
         {
            "Inp": [
               false,
               false
            ],
            "Outp": [
               false,
               false
            ]
         }
      ],
      "IsEnabled": false
   }
}
