{"Name":"textproto","PkgPath":"net/textproto","PkgName":"textproto","ID":"net/textproto","Funcs":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"CanonicalMIMEHeaderKey","Signature":"func CanonicalMIMEHeaderKey(s string) string","ID":"FunctionCanonicalMIMEHeaderKey","Docs":["CanonicalMIMEHeaderKey returns the canonical format of the","MIME header key s. The canonicalization converts the first","letter and any letter following a hyphen to upper case;","the rest are converted to lowercase. For example, the","canonical key for \"accept-encoding\" is \"Accept-Encoding\".","MIME header keys are assumed to be ASCII only.","If s contains a space or invalid header field bytes, it is","returned without modifications."],"Name":"CanonicalMIMEHeaderKey","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"s","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into489","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Dial","Signature":"func Dial(network string, addr string) (*Conn, error)","ID":"FunctionDial","Docs":["Dial connects to the given address on the given network using net.Dial","and then returns a new Conn for the connection."],"Name":"Dial","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"network","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"addr","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"","TypeName":"Conn","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Conn","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"NewConn","Signature":"func NewConn(conn io.ReadWriteCloser) *Conn","ID":"FunctionNewConn","Docs":["NewConn returns a new Conn using conn for I/O."],"Name":"NewConn","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"conn","TypeName":"ReadWriteCloser","PkgName":"io","PkgPath":"io","QualifiedName":"io.ReadWriteCloser","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Conn","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Conn","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"NewReader","Signature":"func NewReader(r *bufio.Reader) *Reader","ID":"FunctionNewReader","Docs":["NewReader returns a new Reader reading from r.","","To avoid denial of service attacks, the provided bufio.Reader","should be reading from an io.LimitReader or similar Reader to bound","the size of responses."],"Name":"NewReader","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"r","TypeName":"Reader","PkgName":"bufio","PkgPath":"bufio","QualifiedName":"bufio.Reader","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into836","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isResult()","Element":"result","Index":0},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"NewWriter","Signature":"func NewWriter(w *bufio.Writer) *Writer","ID":"FunctionNewWriter","Docs":["NewWriter returns a new Writer writing to w."],"Name":"NewWriter","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"w","TypeName":"Writer","PkgName":"bufio","PkgPath":"bufio","QualifiedName":"bufio.Writer","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"from912","TypeName":"Writer","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Writer","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"TrimBytes","Signature":"func TrimBytes(b []byte) []byte","ID":"FunctionTrimBytes","Docs":["TrimBytes returns b without leading and trailing ASCII space."],"Name":"TrimBytes","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"b","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into329","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"TrimString","Signature":"func TrimString(s string) string","ID":"FunctionTrimString","Docs":["TrimString returns s without leading and trailing ASCII space."],"Name":"TrimString","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"s","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into760","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}],"TypeMethods":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConnClose","Docs":["Close closes the connection."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Conn","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Conn","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Conn-Close","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Close","Signature":"func (*Conn).Close() error","ID":"FunctionClose","Docs":["Close closes the connection."],"Name":"Close","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ConnCmd","Docs":["Cmd is a convenience method that sends a command after","waiting its turn in the pipeline. The command text is the","result of formatting format with args and appending \\r\\n.","Cmd returns the id of the command, for use with StartResponse and EndResponse.","","For example, a client might run a HELP command that returns a dot-body","by using:","","\tid, err := c.Cmd(\"HELP\")","\tif err != nil {","\t\treturn nil, err","\t}","","\tc.StartResponse(id)","\tdefer c.EndResponse(id)","","\tif _, _, err = c.ReadCodeLine(110); err != nil {","\t\treturn nil, err","\t}","\ttext, err := c.ReadDotBytes()","\tif err != nil {","\t\treturn nil, err","\t}","\treturn c.ReadCodeLine(250)"],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Conn","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Conn","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Conn-Cmd","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Cmd","Signature":"func (*Conn).Cmd(format string, args ...interface{}) (id uint, err error)","ID":"FunctionCmd","Docs":["Cmd is a convenience method that sends a command after","waiting its turn in the pipeline. The command text is the","result of formatting format with args and appending \\r\\n.","Cmd returns the id of the command, for use with StartResponse and EndResponse.","","For example, a client might run a HELP command that returns a dot-body","by using:","","\tid, err := c.Cmd(\"HELP\")","\tif err != nil {","\t\treturn nil, err","\t}","","\tc.StartResponse(id)","\tdefer c.EndResponse(id)","","\tif _, _, err = c.ReadCodeLine(110); err != nil {","\t\treturn nil, err","\t}","\ttext, err := c.ReadDotBytes()","\tif err != nil {","\t\treturn nil, err","\t}","\treturn c.ReadCodeLine(250)"],"Name":"Cmd","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"format","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(any(int i | i \u003e= 1))","Element":"parameter","Index":1},"VarName":"args","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":true,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"id","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"err","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ErrorError","Docs":[],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Error","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Error","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Error-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (*Error).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"MIMEHeaderAdd","Docs":["Add adds the key, value pair to the header.","It appends to any existing values associated with key."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into197","TypeName":"MIMEHeader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.MIMEHeader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-MIMEHeader-Add","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Add","Signature":"func (MIMEHeader).Add(key string, value string)","ID":"FunctionAdd","Docs":["Add adds the key, value pair to the header.","It appends to any existing values associated with key."],"Name":"Add","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"key","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"value","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MIMEHeaderDel","Docs":["Del deletes the values associated with key."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"MIMEHeader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.MIMEHeader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-MIMEHeader-Del","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Del","Signature":"func (MIMEHeader).Del(key string)","ID":"FunctionDel","Docs":["Del deletes the values associated with key."],"Name":"Del","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"key","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"MIMEHeaderGet","Docs":["Get gets the first value associated with the given key.","It is case insensitive; CanonicalMIMEHeaderKey is used","to canonicalize the provided key.","If there are no values associated with the key, Get returns \"\".","To use non-canonical keys, access the map directly."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from519","TypeName":"MIMEHeader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.MIMEHeader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-MIMEHeader-Get","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Get","Signature":"func (MIMEHeader).Get(key string) string","ID":"FunctionGet","Docs":["Get gets the first value associated with the given key.","It is case insensitive; CanonicalMIMEHeaderKey is used","to canonicalize the provided key.","If there are no values associated with the key, Get returns \"\".","To use non-canonical keys, access the map directly."],"Name":"Get","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"key","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into295","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"MIMEHeaderSet","Docs":["Set sets the header entries associated with key to","the single element value. It replaces any existing","values associated with key."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into772","TypeName":"MIMEHeader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.MIMEHeader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-MIMEHeader-Set","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Set","Signature":"func (MIMEHeader).Set(key string, value string)","ID":"FunctionSet","Docs":["Set sets the header entries associated with key to","the single element value. It replaces any existing","values associated with key."],"Name":"Set","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"key","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"value","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"MIMEHeaderValues","Docs":["Values returns all values associated with the given key.","It is case insensitive; CanonicalMIMEHeaderKey is","used to canonicalize the provided key. To use non-canonical","keys, access the map directly.","The returned slice is not a copy."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from283","TypeName":"MIMEHeader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.MIMEHeader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-MIMEHeader-Values","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Values","Signature":"func (MIMEHeader).Values(key string) []string","ID":"FunctionValues","Docs":["Values returns all values associated with the given key.","It is case insensitive; CanonicalMIMEHeaderKey is","used to canonicalize the provided key. To use non-canonical","keys, access the map directly.","The returned slice is not a copy."],"Name":"Values","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"key","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into339","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PipelineEndRequest","Docs":["EndRequest notifies p that the request with the given id has been sent","(or, if this is a server, received)."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Pipeline","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Pipeline","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Pipeline-EndRequest","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"EndRequest","Signature":"func (*Pipeline).EndRequest(id uint)","ID":"FunctionEndRequest","Docs":["EndRequest notifies p that the request with the given id has been sent","(or, if this is a server, received)."],"Name":"EndRequest","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"id","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PipelineEndResponse","Docs":["EndResponse notifies p that the response with the given id has been received","(or, if this is a server, sent)."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Pipeline","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Pipeline","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Pipeline-EndResponse","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"EndResponse","Signature":"func (*Pipeline).EndResponse(id uint)","ID":"FunctionEndResponse","Docs":["EndResponse notifies p that the response with the given id has been received","(or, if this is a server, sent)."],"Name":"EndResponse","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"id","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PipelineNext","Docs":["Next returns the next id for a request/response pair."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Pipeline","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Pipeline","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Pipeline-Next","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Next","Signature":"func (*Pipeline).Next() uint","ID":"FunctionNext","Docs":["Next returns the next id for a request/response pair."],"Name":"Next","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PipelineStartRequest","Docs":["StartRequest blocks until it is time to send (or, if this is a server, receive)","the request with the given id."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Pipeline","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Pipeline","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Pipeline-StartRequest","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StartRequest","Signature":"func (*Pipeline).StartRequest(id uint)","ID":"FunctionStartRequest","Docs":["StartRequest blocks until it is time to send (or, if this is a server, receive)","the request with the given id."],"Name":"StartRequest","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"id","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PipelineStartResponse","Docs":["StartResponse blocks until it is time to receive (or, if this is a server, send)","the request with the given id."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Pipeline","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Pipeline","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Pipeline-StartResponse","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StartResponse","Signature":"func (*Pipeline).StartResponse(id uint)","ID":"FunctionStartResponse","Docs":["StartResponse blocks until it is time to receive (or, if this is a server, send)","the request with the given id."],"Name":"StartResponse","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"id","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ProtocolErrorError","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"ProtocolError","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.ProtocolError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-ProtocolError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (ProtocolError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ReaderDotReader","Docs":["DotReader returns a new Reader that satisfies Reads using the","decoded text of a dot-encoded block read from r.","The returned Reader is only valid until the next call","to a method on r.","","Dot encoding is a common framing used for data blocks","in text protocols such as SMTP.  The data consists of a sequence","of lines, each of which ends in \"\\r\\n\".  The sequence itself","ends at a line containing just a dot: \".\\r\\n\".  Lines beginning","with a dot are escaped with an additional dot to avoid","looking like the end of the sequence.","","The decoded form returned by the Reader's Read method","rewrites the \"\\r\\n\" line endings into the simpler \"\\n\",","removes leading dot escapes if present, and stops with error io.EOF","after consuming (and discarding) the end-of-sequence line."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from316","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-DotReader","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DotReader","Signature":"func (*Reader).DotReader() io.Reader","ID":"FunctionDotReader","Docs":["DotReader returns a new Reader that satisfies Reads using the","decoded text of a dot-encoded block read from r.","The returned Reader is only valid until the next call","to a method on r.","","Dot encoding is a common framing used for data blocks","in text protocols such as SMTP.  The data consists of a sequence","of lines, each of which ends in \"\\r\\n\".  The sequence itself","ends at a line containing just a dot: \".\\r\\n\".  Lines beginning","with a dot are escaped with an additional dot to avoid","looking like the end of the sequence.","","The decoded form returned by the Reader's Read method","rewrites the \"\\r\\n\" line endings into the simpler \"\\n\",","removes leading dot escapes if present, and stops with error io.EOF","after consuming (and discarding) the end-of-sequence line."],"Name":"DotReader","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into282","TypeName":"Reader","PkgName":"io","PkgPath":"io","QualifiedName":"io.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(1)","Element":"result","Index":1}}},"ClassName":"ReaderReadCodeLine","Docs":["ReadCodeLine reads a response code line of the form","\tcode message","where code is a three-digit status code and the message","extends to the rest of the line. An example of such a line is:","\t220 plan9.bell-labs.com ESMTP","","If the prefix of the status does not match the digits in expectCode,","ReadCodeLine returns with err set to \u0026Error{code, message}.","For example, if expectCode is 31, an error will be returned if","the status is not in the range [310,319].","","If the response is multi-line, ReadCodeLine returns an error.","","An expectCode \u003c= 0 disables the check of the status code."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from657","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadCodeLine","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadCodeLine","Signature":"func (*Reader).ReadCodeLine(expectCode int) (code int, message string, err error)","ID":"FunctionReadCodeLine","Docs":["ReadCodeLine reads a response code line of the form","\tcode message","where code is a three-digit status code and the message","extends to the rest of the line. An example of such a line is:","\t220 plan9.bell-labs.com ESMTP","","If the prefix of the status does not match the digits in expectCode,","ReadCodeLine returns with err set to \u0026Error{code, message}.","For example, if expectCode is 31, an error will be returned if","the status is not in the range [310,319].","","If the response is multi-line, ReadCodeLine returns an error.","","An expectCode \u003c= 0 disables the check of the status code."],"Name":"ReadCodeLine","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"expectCode","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"code","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"message","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(2)","Element":"result","Index":2},"VarName":"err","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ReaderReadContinuedLine","Docs":["ReadContinuedLine reads a possibly continued line from r,","eliding the final trailing ASCII white space.","Lines after the first are considered continuations if they","begin with a space or tab character. In the returned data,","continuation lines are separated from the previous line","only by a single space: the newline and leading white space","are removed.","","For example, consider this input:","","\tLine 1","\t  continued...","\tLine 2","","The first call to ReadContinuedLine will return \"Line 1 continued...\"","and the second will return \"Line 2\".","","A line consisting of only white space is never continued."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from537","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadContinuedLine","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadContinuedLine","Signature":"func (*Reader).ReadContinuedLine() (string, error)","ID":"FunctionReadContinuedLine","Docs":["ReadContinuedLine reads a possibly continued line from r,","eliding the final trailing ASCII white space.","Lines after the first are considered continuations if they","begin with a space or tab character. In the returned data,","continuation lines are separated from the previous line","only by a single space: the newline and leading white space","are removed.","","For example, consider this input:","","\tLine 1","\t  continued...","\tLine 2","","The first call to ReadContinuedLine will return \"Line 1 continued...\"","and the second will return \"Line 2\".","","A line consisting of only white space is never continued."],"Name":"ReadContinuedLine","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into802","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ReaderReadContinuedLineBytes","Docs":["ReadContinuedLineBytes is like ReadContinuedLine but","returns a []byte instead of a string."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from495","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadContinuedLineBytes","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadContinuedLineBytes","Signature":"func (*Reader).ReadContinuedLineBytes() ([]byte, error)","ID":"FunctionReadContinuedLineBytes","Docs":["ReadContinuedLineBytes is like ReadContinuedLine but","returns a []byte instead of a string."],"Name":"ReadContinuedLineBytes","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into277","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ReaderReadDotBytes","Docs":["ReadDotBytes reads a dot-encoding and returns the decoded data.","","See the documentation for the DotReader method for details about dot-encoding."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from499","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadDotBytes","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadDotBytes","Signature":"func (*Reader).ReadDotBytes() ([]byte, error)","ID":"FunctionReadDotBytes","Docs":["ReadDotBytes reads a dot-encoding and returns the decoded data.","","See the documentation for the DotReader method for details about dot-encoding."],"Name":"ReadDotBytes","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into289","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ReaderReadDotLines","Docs":["ReadDotLines reads a dot-encoding and returns a slice","containing the decoded lines, with the final \\r\\n or \\n elided from each.","","See the documentation for the DotReader method for details about dot-encoding."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from877","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadDotLines","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadDotLines","Signature":"func (*Reader).ReadDotLines() ([]string, error)","ID":"FunctionReadDotLines","Docs":["ReadDotLines reads a dot-encoding and returns a slice","containing the decoded lines, with the final \\r\\n or \\n elided from each.","","See the documentation for the DotReader method for details about dot-encoding."],"Name":"ReadDotLines","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into580","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ReaderReadLine","Docs":["ReadLine reads a single line from r,","eliding the final \\n or \\r\\n from the returned string."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from742","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadLine","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadLine","Signature":"func (*Reader).ReadLine() (string, error)","ID":"FunctionReadLine","Docs":["ReadLine reads a single line from r,","eliding the final \\n or \\r\\n from the returned string."],"Name":"ReadLine","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into474","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ReaderReadLineBytes","Docs":["ReadLineBytes is like ReadLine but returns a []byte instead of a string."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from599","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadLineBytes","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadLineBytes","Signature":"func (*Reader).ReadLineBytes() ([]byte, error)","ID":"FunctionReadLineBytes","Docs":["ReadLineBytes is like ReadLine but returns a []byte instead of a string."],"Name":"ReadLineBytes","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into697","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"ReaderReadMIMEHeader","Docs":["ReadMIMEHeader reads a MIME-style header from r.","The header is a sequence of possibly continued Key: Value lines","ending in a blank line.","The returned map m maps CanonicalMIMEHeaderKey(key) to a","sequence of values in the same order encountered in the input.","","For example, consider this input:","","\tMy-Key: Value 1","\tLong-Key: Even","\t       Longer Value","\tMy-Key: Value 2","","Given that input, ReadMIMEHeader returns the map:","","\tmap[string][]string{","\t\t\"My-Key\": {\"Value 1\", \"Value 2\"},","\t\t\"Long-Key\": {\"Even Longer Value\"},","\t}"],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from211","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadMIMEHeader","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadMIMEHeader","Signature":"func (*Reader).ReadMIMEHeader() (MIMEHeader, error)","ID":"FunctionReadMIMEHeader","Docs":["ReadMIMEHeader reads a MIME-style header from r.","The header is a sequence of possibly continued Key: Value lines","ending in a blank line.","The returned map m maps CanonicalMIMEHeaderKey(key) to a","sequence of values in the same order encountered in the input.","","For example, consider this input:","","\tMy-Key: Value 1","\tLong-Key: Even","\t       Longer Value","\tMy-Key: Value 2","","Given that input, ReadMIMEHeader returns the map:","","\tmap[string][]string{","\t\t\"My-Key\": {\"Value 1\", \"Value 2\"},","\t\t\"Long-Key\": {\"Even Longer Value\"},","\t}"],"Name":"ReadMIMEHeader","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into821","TypeName":"MIMEHeader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.MIMEHeader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult(1)","Element":"result","Index":1}}},"ClassName":"ReaderReadResponse","Docs":["ReadResponse reads a multi-line response of the form:","","\tcode-message line 1","\tcode-message line 2","\t...","\tcode message line n","","where code is a three-digit status code. The first line starts with the","code and a hyphen. The response is terminated by a line that starts","with the same code followed by a space. Each line in message is","separated by a newline (\\n).","","See page 36 of RFC 959 (https://www.ietf.org/rfc/rfc959.txt) for","details of another form of response accepted:",""," code-message line 1"," message line 2"," ..."," code message line n","","If the prefix of the status does not match the digits in expectCode,","ReadResponse returns with err set to \u0026Error{code, message}.","For example, if expectCode is 31, an error will be returned if","the status is not in the range [310,319].","","An expectCode \u003c= 0 disables the check of the status code."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from795","TypeName":"Reader","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Reader-ReadResponse","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ReadResponse","Signature":"func (*Reader).ReadResponse(expectCode int) (code int, message string, err error)","ID":"FunctionReadResponse","Docs":["ReadResponse reads a multi-line response of the form:","","\tcode-message line 1","\tcode-message line 2","\t...","\tcode message line n","","where code is a three-digit status code. The first line starts with the","code and a hyphen. The response is terminated by a line that starts","with the same code followed by a space. Each line in message is","separated by a newline (\\n).","","See page 36 of RFC 959 (https://www.ietf.org/rfc/rfc959.txt) for","details of another form of response accepted:",""," code-message line 1"," message line 2"," ..."," code message line n","","If the prefix of the status does not match the digits in expectCode,","ReadResponse returns with err set to \u0026Error{code, message}.","For example, if expectCode is 31, an error will be returned if","the status is not in the range [310,319].","","An expectCode \u003c= 0 disables the check of the status code."],"Name":"ReadResponse","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"expectCode","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"code","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"message","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(2)","Element":"result","Index":2},"VarName":"err","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isResult()","Element":"result","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"WriterDotWriter","Docs":["DotWriter returns a writer that can be used to write a dot-encoding to w.","It takes care of inserting leading dots when necessary,","translating line-ending \\n into \\r\\n, and adding the final .\\r\\n line","when the DotWriter is closed. The caller should close the","DotWriter before the next call to a method on w.","","See the documentation for Reader's DotReader method for details about dot-encoding."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into199","TypeName":"Writer","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Writer-DotWriter","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"DotWriter","Signature":"func (*Writer).DotWriter() io.WriteCloser","ID":"FunctionDotWriter","Docs":["DotWriter returns a writer that can be used to write a dot-encoding to w.","It takes care of inserting leading dots when necessary,","translating line-ending \\n into \\r\\n, and adding the final .\\r\\n line","when the DotWriter is closed. The caller should close the","DotWriter before the next call to a method on w.","","See the documentation for Reader's DotReader method for details about dot-encoding."],"Name":"DotWriter","PkgPath":"net/textproto","PkgName":"textproto","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"from188","TypeName":"WriteCloser","PkgName":"io","PkgPath":"io","QualifiedName":"io.WriteCloser","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"WriterPrintfLine","Docs":["PrintfLine writes the formatted output followed by \\r\\n."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into566","TypeName":"Writer","PkgName":"textproto","PkgPath":"net/textproto","QualifiedName":"net/textproto.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Writer-PrintfLine","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PrintfLine","Signature":"func (*Writer).PrintfLine(format string, args ...interface{}) error","ID":"FunctionPrintfLine","Docs":["PrintfLine writes the formatted output followed by \\r\\n."],"Name":"PrintfLine","PkgPath":"net/textproto","PkgName":"textproto","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"format","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(any(int i | i \u003e= 1))","Element":"parameter","Index":1},"VarName":"args","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":true,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}}],"InterfaceMethods":[]}