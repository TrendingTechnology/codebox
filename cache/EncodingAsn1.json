{"Name":"asn1","PkgPath":"encoding/asn1","PkgName":"asn1","ID":"encoding/asn1","Funcs":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"Marshal","Signature":"func Marshal(val interface{}) ([]byte, error)","ID":"FunctionMarshal","Docs":["Marshal returns the ASN.1 encoding of val.","","In addition to the struct tags recognised by Unmarshal, the following can be","used:","","\tia5:         causes strings to be marshaled as ASN.1, IA5String values","\tomitempty:   causes empty slices to be skipped","\tprintable:   causes strings to be marshaled as ASN.1, PrintableString values","\tutf8:        causes strings to be marshaled as ASN.1, UTF8String values","\tutc:         causes time.Time to be marshaled as ASN.1, UTCTime values","\tgeneralized: causes time.Time to be marshaled as ASN.1, GeneralizedTime values"],"Name":"Marshal","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"val","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into409","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult(0)","Element":"result","Index":0}}},"ClassName":"MarshalWithParams","Signature":"func MarshalWithParams(val interface{}, params string) ([]byte, error)","ID":"FunctionMarshalWithParams","Docs":["MarshalWithParams allows field parameters to be specified for the","top-level element. The form of the params is the same as the field tags."],"Name":"MarshalWithParams","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"val","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"params","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"into980","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1}}},"ClassName":"Unmarshal","Signature":"func Unmarshal(b []byte, val interface{}) (rest []byte, err error)","ID":"FunctionUnmarshal","Docs":["Unmarshal parses the DER-encoded ASN.1 data structure b","and uses the reflect package to fill in an arbitrary value pointed at by val.","Because Unmarshal uses the reflect package, the structs","being written to must use upper case field names.","","An ASN.1 INTEGER can be written to an int, int32, int64,","or *big.Int (from the math/big package).","If the encoded value does not fit in the Go type,","Unmarshal returns a parse error.","","An ASN.1 BIT STRING can be written to a BitString.","","An ASN.1 OCTET STRING can be written to a []byte.","","An ASN.1 OBJECT IDENTIFIER can be written to an","ObjectIdentifier.","","An ASN.1 ENUMERATED can be written to an Enumerated.","","An ASN.1 UTCTIME or GENERALIZEDTIME can be written to a time.Time.","","An ASN.1 PrintableString, IA5String, or NumericString can be written to a string.","","Any of the above ASN.1 values can be written to an interface{}.","The value stored in the interface has the corresponding Go type.","For integers, that type is int64.","","An ASN.1 SEQUENCE OF x or SET OF x can be written","to a slice if an x can be written to the slice's element type.","","An ASN.1 SEQUENCE or SET can be written to a struct","if each of the elements in the sequence can be","written to the corresponding element in the struct.","","The following tags on struct fields have special meaning to Unmarshal:","","\tapplication specifies that an APPLICATION tag is used","\tprivate     specifies that a PRIVATE tag is used","\tdefault:x   sets the default value for optional integer fields (only used if optional is also present)","\texplicit    specifies that an additional, explicit tag wraps the implicit one","\toptional    marks the field as ASN.1 OPTIONAL","\tset         causes a SET, rather than a SEQUENCE type to be expected","\ttag:x       specifies the ASN.1 tag number; implies ASN.1 CONTEXT SPECIFIC","","If the type of the first field of a structure is RawContent then the raw","ASN1 contents of the struct will be stored in it.","","If the type name of a slice element ends with \"SET\" then it's treated as if","the \"set\" tag was set on it. This can be used with nested slices where a","struct tag cannot be given.","","Other ASN.1 types are not supported; if it encounters them,","Unmarshal returns a parse error."],"Name":"Unmarshal","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"b","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"val","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"rest","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"err","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1}}},"ClassName":"UnmarshalWithParams","Signature":"func UnmarshalWithParams(b []byte, val interface{}, params string) (rest []byte, err error)","ID":"FunctionUnmarshalWithParams","Docs":["UnmarshalWithParams allows field parameters to be specified for the","top-level element. The form of the params is the same as the field tags."],"Name":"UnmarshalWithParams","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"b","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"val","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(2)","Element":"parameter","Index":2},"VarName":"params","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"rest","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"err","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}],"TypeMethods":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"BitStringAt","Docs":["At returns the bit at the given index. If the index is out of range it","returns false."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"BitString","PkgName":"asn1","PkgPath":"encoding/asn1","QualifiedName":"encoding/asn1.BitString","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-BitString-At","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"At","Signature":"func (BitString).At(i int) int","ID":"FunctionAt","Docs":["At returns the bit at the given index. If the index is out of range it","returns false."],"Name":"At","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"i","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"BitStringRightAlign","Docs":["RightAlign returns a slice where the padding bits are at the beginning. The","slice may share memory with the BitString."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"BitString","PkgName":"asn1","PkgPath":"encoding/asn1","QualifiedName":"encoding/asn1.BitString","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-BitString-RightAlign","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"RightAlign","Signature":"func (BitString).RightAlign() []byte","ID":"FunctionRightAlign","Docs":["RightAlign returns a slice where the padding bits are at the beginning. The","slice may share memory with the BitString."],"Name":"RightAlign","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ObjectIdentifierEqual","Docs":["Equal reports whether oi and other represent the same identifier."],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"ObjectIdentifier","PkgName":"asn1","PkgPath":"encoding/asn1","QualifiedName":"encoding/asn1.ObjectIdentifier","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-ObjectIdentifier-Equal","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Equal","Signature":"func (ObjectIdentifier).Equal(other ObjectIdentifier) bool","ID":"FunctionEqual","Docs":["Equal reports whether oi and other represent the same identifier."],"Name":"Equal","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"other","TypeName":"ObjectIdentifier","PkgName":"asn1","PkgPath":"encoding/asn1","QualifiedName":"encoding/asn1.ObjectIdentifier","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ObjectIdentifierString","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from731","TypeName":"ObjectIdentifier","PkgName":"asn1","PkgPath":"encoding/asn1","QualifiedName":"encoding/asn1.ObjectIdentifier","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-ObjectIdentifier-String","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"String","Signature":"func (ObjectIdentifier).String() string","ID":"FunctionString","Docs":[],"Name":"String","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into594","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"StructuralErrorError","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"StructuralError","PkgName":"asn1","PkgPath":"encoding/asn1","QualifiedName":"encoding/asn1.StructuralError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-StructuralError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (StructuralError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"SyntaxErrorError","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"SyntaxError","PkgName":"asn1","PkgPath":"encoding/asn1","QualifiedName":"encoding/asn1.SyntaxError","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-SyntaxError-Error","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Error","Signature":"func (SyntaxError).Error() string","ID":"FunctionError","Docs":[],"Name":"Error","PkgPath":"encoding/asn1","PkgName":"asn1","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}}],"InterfaceMethods":[]}