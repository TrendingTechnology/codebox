{"Name":"tabwriter","PkgPath":"text/tabwriter","PkgName":"tabwriter","ID":"text/tabwriter","Funcs":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isResult()","Element":"result","Index":0},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"NewWriter","Signature":"func NewWriter(output io.Writer, minwidth int, tabwidth int, padding int, padchar byte, flags uint) *Writer","ID":"FunctionNewWriter","Docs":["NewWriter allocates and initializes a new tabwriter.Writer.","The parameters are the same as for the Init function."],"Name":"NewWriter","PkgPath":"text/tabwriter","PkgName":"tabwriter","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"output","TypeName":"Writer","PkgName":"io","PkgPath":"io","QualifiedName":"io.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"minwidth","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(2)","Element":"parameter","Index":2},"VarName":"tabwidth","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(3)","Element":"parameter","Index":3},"VarName":"padding","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(4)","Element":"parameter","Index":4},"VarName":"padchar","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(5)","Element":"parameter","Index":5},"VarName":"flags","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"from415","TypeName":"Writer","PkgName":"tabwriter","PkgPath":"text/tabwriter","QualifiedName":"text/tabwriter.Writer","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}],"TypeMethods":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"WriterFlush","Docs":["Flush should be called after the last call to Write to ensure","that any data buffered in the Writer is written to output. Any","incomplete escape sequence at the end is considered","complete for formatting purposes."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Writer","PkgName":"tabwriter","PkgPath":"text/tabwriter","QualifiedName":"text/tabwriter.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Writer-Flush","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Flush","Signature":"func (*Writer).Flush() error","ID":"FunctionFlush","Docs":["Flush should be called after the last call to Write to ensure","that any data buffered in the Writer is written to output. Any","incomplete escape sequence at the end is considered","complete for formatting purposes."],"Name":"Flush","PkgPath":"text/tabwriter","PkgName":"tabwriter","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isResult()","Element":"result","Index":0},"Outp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0}}},"ClassName":"WriterInit","Docs":["A Writer must be initialized with a call to Init. The first parameter (output)","specifies the filter output. The remaining parameters control the formatting:","","\tminwidth\tminimal cell width including any padding","\ttabwidth\twidth of tab characters (equivalent number of spaces)","\tpadding\t\tpadding added to a cell before computing its width","\tpadchar\t\tASCII char used for padding","\t\t\tif padchar == '\\t', the Writer will assume that the","\t\t\twidth of a '\\t' in the formatted output is tabwidth,","\t\t\tand cells are left-aligned independent of align_left","\t\t\t(for correct-looking results, tabwidth must correspond","\t\t\tto the tab width in the viewer displaying the result)","\tflags\t\tformatting control"],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Writer","PkgName":"tabwriter","PkgPath":"text/tabwriter","QualifiedName":"text/tabwriter.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Writer-Init","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Init","Signature":"func (*Writer).Init(output io.Writer, minwidth int, tabwidth int, padding int, padchar byte, flags uint) *Writer","ID":"FunctionInit","Docs":["A Writer must be initialized with a call to Init. The first parameter (output)","specifies the filter output. The remaining parameters control the formatting:","","\tminwidth\tminimal cell width including any padding","\ttabwidth\twidth of tab characters (equivalent number of spaces)","\tpadding\t\tpadding added to a cell before computing its width","\tpadchar\t\tASCII char used for padding","\t\t\tif padchar == '\\t', the Writer will assume that the","\t\t\twidth of a '\\t' in the formatted output is tabwidth,","\t\t\tand cells are left-aligned independent of align_left","\t\t\t(for correct-looking results, tabwidth must correspond","\t\t\tto the tab width in the viewer displaying the result)","\tflags\t\tformatting control"],"Name":"Init","PkgPath":"text/tabwriter","PkgName":"tabwriter","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"output","TypeName":"Writer","PkgName":"io","PkgPath":"io","QualifiedName":"io.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"minwidth","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(2)","Element":"parameter","Index":2},"VarName":"tabwidth","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(3)","Element":"parameter","Index":3},"VarName":"padding","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(4)","Element":"parameter","Index":4},"VarName":"padchar","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(5)","Element":"parameter","Index":5},"VarName":"flags","TypeName":"uint","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"from501","TypeName":"Writer","PkgName":"tabwriter","PkgPath":"text/tabwriter","QualifiedName":"text/tabwriter.Writer","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"WriterWrite","Docs":["Write writes buf to the writer b.","The only errors returned are ones encountered","while writing to the underlying output stream."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into308","TypeName":"Writer","PkgName":"tabwriter","PkgPath":"text/tabwriter","QualifiedName":"text/tabwriter.Writer","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Writer-Write","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Write","Signature":"func (*Writer).Write(buf []byte) (n int, err error)","ID":"FunctionWrite","Docs":["Write writes buf to the writer b.","The only errors returned are ones encountered","while writing to the underlying output stream."],"Name":"Write","PkgPath":"text/tabwriter","PkgName":"tabwriter","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"buf","TypeName":"byte","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":[{"Identity":{"Placeholder":"isResult(0)","Element":"result","Index":0},"VarName":"n","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isResult(1)","Element":"result","Index":1},"VarName":"err","TypeName":"error","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}}],"InterfaceMethods":[]}