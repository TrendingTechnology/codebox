{"Name":"signal","PkgPath":"os/signal","PkgName":"signal","ID":"os/signal","Funcs":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Ignore","Signature":"func Ignore(sig ...os.Signal)","ID":"FunctionIgnore","Docs":["Ignore causes the provided signals to be ignored. If they are received by","the program, nothing will happen. Ignore undoes the effect of any prior","calls to Notify for the provided signals.","If no signals are provided, all incoming signals will be ignored."],"Name":"Ignore","PkgPath":"os/signal","PkgName":"signal","Parameters":[{"Identity":{"Placeholder":"isParameter(_)","Element":"parameter","Index":0},"VarName":"sig","TypeName":"Signal","PkgName":"os","PkgPath":"os","QualifiedName":"os.Signal","IsPtr":false,"IsBasic":false,"IsVariadic":true,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":null},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Ignored","Signature":"func Ignored(sig os.Signal) bool","ID":"FunctionIgnored","Docs":["Ignored reports whether sig is currently ignored."],"Name":"Ignored","PkgPath":"os/signal","PkgName":"signal","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"sig","TypeName":"Signal","PkgName":"os","PkgPath":"os","QualifiedName":"os.Signal","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Notify","Signature":"func Notify(c chan\u003c- os.Signal, sig ...os.Signal)","ID":"FunctionNotify","Docs":["Notify causes package signal to relay incoming signals to c.","If no signals are provided, all incoming signals will be relayed to c.","Otherwise, just the provided signals will.","","Package signal will not block sending to c: the caller must ensure","that c has sufficient buffer space to keep up with the expected","signal rate. For a channel used for notification of just one signal value,","a buffer of size 1 is sufficient.","","It is allowed to call Notify multiple times with the same channel:","each call expands the set of signals sent to that channel.","The only way to remove signals from the set is to call Stop.","","It is allowed to call Notify multiple times with different channels","and the same signals: each channel receives copies of incoming","signals independently."],"Name":"Notify","PkgPath":"os/signal","PkgName":"signal","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"c","TypeName":"chan\u003c- os.Signal","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(any(int i | i \u003e= 1))","Element":"parameter","Index":1},"VarName":"sig","TypeName":"Signal","PkgName":"os","PkgPath":"os","QualifiedName":"os.Signal","IsPtr":false,"IsBasic":false,"IsVariadic":true,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":null},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Reset","Signature":"func Reset(sig ...os.Signal)","ID":"FunctionReset","Docs":["Reset undoes the effect of any prior calls to Notify for the provided","signals.","If no signals are provided, all signal handlers will be reset."],"Name":"Reset","PkgPath":"os/signal","PkgName":"signal","Parameters":[{"Identity":{"Placeholder":"isParameter(_)","Element":"parameter","Index":0},"VarName":"sig","TypeName":"Signal","PkgName":"os","PkgPath":"os","QualifiedName":"os.Signal","IsPtr":false,"IsBasic":false,"IsVariadic":true,"IsNullable":true,"IsStruct":false,"IsRepeated":true}],"Results":null},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Stop","Signature":"func Stop(c chan\u003c- os.Signal)","ID":"FunctionStop","Docs":["Stop causes package signal to stop relaying incoming signals to c.","It undoes the effect of all prior calls to Notify using c.","When Stop returns, it is guaranteed that c will receive no more signals."],"Name":"Stop","PkgPath":"os/signal","PkgName":"signal","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"c","TypeName":"chan\u003c- os.Signal","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":null}],"TypeMethods":[],"InterfaceMethods":[]}