{"Name":"scanner","PkgPath":"text/scanner","PkgName":"scanner","ID":"text/scanner","Funcs":[{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"TokenString","Signature":"func TokenString(tok rune) string","ID":"FunctionTokenString","Docs":["TokenString returns a printable string for a token or Unicode character."],"Name":"TokenString","PkgPath":"text/scanner","PkgName":"scanner","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"tok","TypeName":"rune","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into407","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}],"TypeMethods":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PositionIsValid","Docs":["IsValid reports whether the position is valid."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Position","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Position","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Position-IsValid","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"IsValid","Signature":"func (*Position).IsValid() bool","ID":"FunctionIsValid","Docs":["IsValid reports whether the position is valid."],"Name":"IsValid","PkgPath":"text/scanner","PkgName":"scanner","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"bool","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PositionString","Docs":[],"IsOnPtr":false,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Position","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Position","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Position-String","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"String","Signature":"func (Position).String() string","ID":"FunctionString","Docs":[],"Name":"String","PkgPath":"text/scanner","PkgName":"scanner","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ScannerInit","Docs":["Init initializes a Scanner with a new source and returns s.","Error is set to nil, ErrorCount is set to 0, Mode is set to GoTokens,","and Whitespace is set to GoWhitespace."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"into868","TypeName":"Scanner","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Scanner","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Scanner-Init","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Init","Signature":"func (*Scanner).Init(src io.Reader) *Scanner","ID":"FunctionInit","Docs":["Init initializes a Scanner with a new source and returns s.","Error is set to nil, ErrorCount is set to 0, Mode is set to GoTokens,","and Whitespace is set to GoWhitespace."],"Name":"Init","PkgPath":"text/scanner","PkgName":"scanner","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"src","TypeName":"Reader","PkgName":"io","PkgPath":"io","QualifiedName":"io.Reader","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Scanner","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Scanner","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ScannerNext","Docs":["Next reads and returns the next Unicode character.","It returns EOF at the end of the source. It reports","a read error by calling s.Error, if not nil; otherwise","it prints an error message to os.Stderr. Next does not","update the Scanner's Position field; use Pos() to","get the current position."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from370","TypeName":"Scanner","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Scanner","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Scanner-Next","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Next","Signature":"func (*Scanner).Next() rune","ID":"FunctionNext","Docs":["Next reads and returns the next Unicode character.","It returns EOF at the end of the source. It reports","a read error by calling s.Error, if not nil; otherwise","it prints an error message to os.Stderr. Next does not","update the Scanner's Position field; use Pos() to","get the current position."],"Name":"Next","PkgPath":"text/scanner","PkgName":"scanner","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into796","TypeName":"rune","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ScannerPeek","Docs":["Peek returns the next Unicode character in the source without advancing","the scanner. It returns EOF if the scanner's position is at the last","character of the source."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from597","TypeName":"Scanner","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Scanner","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Scanner-Peek","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Peek","Signature":"func (*Scanner).Peek() rune","ID":"FunctionPeek","Docs":["Peek returns the next Unicode character in the source without advancing","the scanner. It returns EOF if the scanner's position is at the last","character of the source."],"Name":"Peek","PkgPath":"text/scanner","PkgName":"scanner","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into876","TypeName":"rune","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ScannerPos","Docs":["Pos returns the position of the character immediately after","the character or token returned by the last call to Next or Scan.","Use the Scanner's Position field for the start position of the most","recently scanned token."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Scanner","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Scanner","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Scanner-Pos","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Pos","Signature":"func (*Scanner).Pos() (pos Position)","ID":"FunctionPos","Docs":["Pos returns the position of the character immediately after","the character or token returned by the last call to Next or Scan.","Use the Scanner's Position field for the start position of the most","recently scanned token."],"Name":"Pos","PkgPath":"text/scanner","PkgName":"scanner","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"pos","TypeName":"Position","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Position","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ScannerScan","Docs":["Scan reads the next token or Unicode character from source and returns it.","It only recognizes tokens t for which the respective Mode bit (1\u003c\u003c-t) is set.","It returns EOF at the end of the source. It reports scanner errors (read and","token errors) by calling s.Error, if not nil; otherwise it prints an error","message to os.Stderr."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from958","TypeName":"Scanner","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Scanner","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Scanner-Scan","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Scan","Signature":"func (*Scanner).Scan() rune","ID":"FunctionScan","Docs":["Scan reads the next token or Unicode character from source and returns it.","It only recognizes tokens t for which the respective Mode bit (1\u003c\u003c-t) is set.","It returns EOF at the end of the source. It reports scanner errors (read and","token errors) by calling s.Error, if not nil; otherwise it prints an error","message to os.Stderr."],"Name":"Scan","PkgPath":"text/scanner","PkgName":"scanner","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into514","TypeName":"rune","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ScannerTokenText","Docs":["TokenText returns the string corresponding to the most recently scanned token.","Valid after calling Scan and in calls of Scanner.Error."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"from936","TypeName":"Scanner","PkgName":"scanner","PkgPath":"text/scanner","QualifiedName":"text/scanner.Scanner","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Scanner-TokenText","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"TokenText","Signature":"func (*Scanner).TokenText() string","ID":"FunctionTokenText","Docs":["TokenText returns the string corresponding to the most recently scanned token.","Valid after calling Scan and in calls of Scanner.Error."],"Name":"TokenText","PkgPath":"text/scanner","PkgName":"scanner","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"into448","TypeName":"string","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}}],"InterfaceMethods":[]}