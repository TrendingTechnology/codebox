{"Name":"list","PkgPath":"container/list","PkgName":"list","ID":"container/list","Funcs":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"New","Signature":"func New() *List","ID":"FunctionNew","Docs":["New returns an initialized list."],"Name":"New","PkgPath":"container/list","PkgName":"list","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}],"TypeMethods":[{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ElementNext","Docs":["Next returns the next list element or nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Element-Next","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Next","Signature":"func (*Element).Next() *Element","ID":"FunctionNext","Docs":["Next returns the next list element or nil."],"Name":"Next","PkgPath":"container/list","PkgName":"list","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ElementPrev","Docs":["Prev returns the previous list element or nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-Element-Prev","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Prev","Signature":"func (*Element).Prev() *Element","ID":"FunctionPrev","Docs":["Prev returns the previous list element or nil."],"Name":"Prev","PkgPath":"container/list","PkgName":"list","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ListBack","Docs":["Back returns the last element of list l or nil if the list is empty."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-Back","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Back","Signature":"func (*List).Back() *Element","ID":"FunctionBack","Docs":["Back returns the last element of list l or nil if the list is empty."],"Name":"Back","PkgPath":"container/list","PkgName":"list","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ListFront","Docs":["Front returns the first element of list l or nil if the list is empty."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-Front","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Front","Signature":"func (*List).Front() *Element","ID":"FunctionFront","Docs":["Front returns the first element of list l or nil if the list is empty."],"Name":"Front","PkgPath":"container/list","PkgName":"list","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ListInit","Docs":["Init initializes or clears list l."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-Init","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Init","Signature":"func (*List).Init() *List","ID":"FunctionInit","Docs":["Init initializes or clears list l."],"Name":"Init","PkgPath":"container/list","PkgName":"list","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListInsertAfter","Docs":["InsertAfter inserts a new element e with value v immediately after mark and returns e.","If mark is not an element of l, the list is not modified.","The mark must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-InsertAfter","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"InsertAfter","Signature":"func (*List).InsertAfter(v interface{}, mark *Element) *Element","ID":"FunctionInsertAfter","Docs":["InsertAfter inserts a new element e with value v immediately after mark and returns e.","If mark is not an element of l, the list is not modified.","The mark must not be nil."],"Name":"InsertAfter","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"mark","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListInsertBefore","Docs":["InsertBefore inserts a new element e with value v immediately before mark and returns e.","If mark is not an element of l, the list is not modified.","The mark must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-InsertBefore","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"InsertBefore","Signature":"func (*List).InsertBefore(v interface{}, mark *Element) *Element","ID":"FunctionInsertBefore","Docs":["InsertBefore inserts a new element e with value v immediately before mark and returns e.","If mark is not an element of l, the list is not modified.","The mark must not be nil."],"Name":"InsertBefore","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"mark","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"ListLen","Docs":["Len returns the number of elements of list l.","The complexity is O(1)."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-Len","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Len","Signature":"func (*List).Len() int","ID":"FunctionLen","Docs":["Len returns the number of elements of list l.","The complexity is O(1)."],"Name":"Len","PkgPath":"container/list","PkgName":"list","Parameters":null,"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"int","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":true,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListMoveAfter","Docs":["MoveAfter moves element e to its new position after mark.","If e or mark is not an element of l, or e == mark, the list is not modified.","The element and mark must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-MoveAfter","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MoveAfter","Signature":"func (*List).MoveAfter(e *Element, mark *Element)","ID":"FunctionMoveAfter","Docs":["MoveAfter moves element e to its new position after mark.","If e or mark is not an element of l, or e == mark, the list is not modified.","The element and mark must not be nil."],"Name":"MoveAfter","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"e","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"mark","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListMoveBefore","Docs":["MoveBefore moves element e to its new position before mark.","If e or mark is not an element of l, or e == mark, the list is not modified.","The element and mark must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-MoveBefore","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MoveBefore","Signature":"func (*List).MoveBefore(e *Element, mark *Element)","ID":"FunctionMoveBefore","Docs":["MoveBefore moves element e to its new position before mark.","If e or mark is not an element of l, or e == mark, the list is not modified.","The element and mark must not be nil."],"Name":"MoveBefore","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"e","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false},{"Identity":{"Placeholder":"isParameter(1)","Element":"parameter","Index":1},"VarName":"mark","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListMoveToBack","Docs":["MoveToBack moves element e to the back of list l.","If e is not an element of l, the list is not modified.","The element must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-MoveToBack","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MoveToBack","Signature":"func (*List).MoveToBack(e *Element)","ID":"FunctionMoveToBack","Docs":["MoveToBack moves element e to the back of list l.","If e is not an element of l, the list is not modified.","The element must not be nil."],"Name":"MoveToBack","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"e","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListMoveToFront","Docs":["MoveToFront moves element e to the front of list l.","If e is not an element of l, the list is not modified.","The element must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-MoveToFront","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"MoveToFront","Signature":"func (*List).MoveToFront(e *Element)","ID":"FunctionMoveToFront","Docs":["MoveToFront moves element e to the front of list l.","If e is not an element of l, the list is not modified.","The element must not be nil."],"Name":"MoveToFront","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"e","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListPushBack","Docs":["PushBack inserts a new element e with value v at the back of list l and returns e."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-PushBack","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PushBack","Signature":"func (*List).PushBack(v interface{}) *Element","ID":"FunctionPushBack","Docs":["PushBack inserts a new element e with value v at the back of list l and returns e."],"Name":"PushBack","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListPushBackList","Docs":["PushBackList inserts a copy of an other list at the back of list l.","The lists l and other may be the same. They must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-PushBackList","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PushBackList","Signature":"func (*List).PushBackList(other *List)","ID":"FunctionPushBackList","Docs":["PushBackList inserts a copy of an other list at the back of list l.","The lists l and other may be the same. They must not be nil."],"Name":"PushBackList","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"other","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListPushFront","Docs":["PushFront inserts a new element e with value v at the front of list l and returns e."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-PushFront","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PushFront","Signature":"func (*List).PushFront(v interface{}) *Element","ID":"FunctionPushFront","Docs":["PushFront inserts a new element e with value v at the front of list l and returns e."],"Name":"PushFront","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"v","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}]}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1}}},"ClassName":"ListPushFrontList","Docs":["PushFrontList inserts a copy of an other list at the front of list l.","The lists l and other may be the same. They must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-PushFrontList","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"PushFrontList","Signature":"func (*List).PushFrontList(other *List)","ID":"FunctionPushFrontList","Docs":["PushFrontList inserts a copy of an other list at the front of list l.","The lists l and other may be the same. They must not be nil."],"Name":"PushFrontList","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"other","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":null}},{"CodeQL":{"IsEnabled":true,"Pointers":{"Inp":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"Outp":{"Placeholder":"isResult()","Element":"result","Index":0}}},"ClassName":"ListRemove","Docs":["Remove removes e from l if e is an element of list l.","It returns the element value e.Value.","The element must not be nil."],"IsOnPtr":true,"Receiver":{"Identity":{"Placeholder":"isReceiver()","Element":"receiver","Index":-1},"VarName":"","TypeName":"List","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.List","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":false,"IsStruct":false,"IsRepeated":false},"ID":"type-method-List-Remove","Func":{"CodeQL":{"IsEnabled":false,"Pointers":{"Inp":{"Placeholder":"TODO","Element":"TODO","Index":-1},"Outp":{"Placeholder":"TODO","Element":"TODO","Index":-1}}},"ClassName":"Remove","Signature":"func (*List).Remove(e *Element) interface{}","ID":"FunctionRemove","Docs":["Remove removes e from l if e is an element of list l.","It returns the element value e.Value.","The element must not be nil."],"Name":"Remove","PkgPath":"container/list","PkgName":"list","Parameters":[{"Identity":{"Placeholder":"isParameter(0)","Element":"parameter","Index":0},"VarName":"e","TypeName":"Element","PkgName":"list","PkgPath":"container/list","QualifiedName":"container/list.Element","IsPtr":true,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":true,"IsRepeated":false}],"Results":[{"Identity":{"Placeholder":"isResult()","Element":"result","Index":0},"VarName":"","TypeName":"interface{}","PkgName":"","PkgPath":"","QualifiedName":"","IsPtr":false,"IsBasic":false,"IsVariadic":false,"IsNullable":true,"IsStruct":false,"IsRepeated":false}]}}],"InterfaceMethods":[]}